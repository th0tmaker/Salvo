#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    // contracts/verifier.algo.ts:126
    // export class SignalsAndProof extends Contract {
    txn NumAppArgs
    bz main_bare_routing@6
    pushbytes 0xac3bf770 // method "signalsAndProof(uint256[],(byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],byte[96],uint256,uint256,uint256,uint256,uint256,uint256),(uint256[],uint256,uint256))void"
    txna ApplicationArgs 0
    match main_signalsAndProof_route@3

main_after_if_else@10:
    err

main_signalsAndProof_route@3:
    // contracts/verifier.algo.ts:127-131
    // public signalsAndProof(
    //   signals: Uint256[],
    //   proof: Proof,
    //   lw: LagrangeWitness,
    // ): void {}
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    pushint 1 // 1
    return

main_bare_routing@6:
    // contracts/verifier.algo.ts:126
    // export class SignalsAndProof extends Contract {
    txn OnCompletion
    bnz main_after_if_else@10
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return
