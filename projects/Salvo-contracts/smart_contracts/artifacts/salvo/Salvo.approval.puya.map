{
  "version": 3,
  "sources": [
    "../../salvo/contract.py",
    "../../salvo/subroutines.py"
  ],
  "mappings": "AA6BA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAmSK;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAnEA;;AAAA;AAAA;AAAA;;AAAA;AAhOL;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAgOK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA9FA;;AAAA;AAAA;AAAA;;AAAA;AAlIL;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAkIK;;;AAAA;;AAxBA;;AAAA;AAAA;AAAA;;AAAA;AA1GL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0GK;;;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAxBA;;AAAA;AAAA;AAAA;;AAAA;AAvEL;;;AAAA;AAuEK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAlEL;;;AAAA;AAAA;;AAkEK;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AA7DL;;;AAAA;AA6DK;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAxDL;;;AAAA;AAwDK;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAnDL;;;AAAA;AAAA;;AAmDK;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AAzCL;;;AAAA;AAAA;;;AAAA;;;AAyCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AAjCL;;;AAAA;AAAA;;;AAiCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAEU;;AAFV;AAAA;AAAA;AAAA;AAAA;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAdL;;;AAAA;;;AAcK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AClCL;;;AAEW;;AAAM;;;AAAN;AAAA;;;AAAwB;;AAAM;;;AAAN;AAAxB;;;;AAAP;;;;;;AAgLJ;;;AAIQ;;AAAA;AAAa;;AAAb;AAA6B;;AAAA;AAA7B;AAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAP;AAIJ;;;AAKW;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAP;AACO;;AAAA;AAAA;AAAW;;AAAX;AAAP;AAGO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;ADrKJ;;;AAOY;;AAAA;AAAkB;;AAAA;AAAlB;AADQ;;;AAAA;AAKL;;;AAAA;AAAP;AAQR;;;AAKe;;AAAiC;AAAjC;;AAAA;;;AAAP;AAGR;;;AAMyC;;AAAA;;AAAA;;;AAD1B;;AACM;AADN;;AAAA;;;AAAP;AAKR;;;AAEe;;AAAA;;AAAA;AAAA;AAAA;;AAAP;AAGR;;;AAEwC;;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;;AAAP;AAGR;;;AAEyC;;AAAA;AAA1B;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAGR;;;AAEe;AAAA;;AAAA;AAAA;AAAA;;AAAP;AAGR;;;;;AAGe;;AAAA;AAAW;;AAAX;AAAA;AAAA;AAAA;AAAA;;AAAP;AAGmB;AAAA;AAAA;AAAA;;AAAA;AAGF;;;;AAAA;AAGE;AAAH;AAAP;;AAAA;;AAAA;AAAjB;;;AAEY;;AAAA;;AAAkD;;AAAhC;AAAlB;AAAA;;AAEsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAnB;;;;;AAAf;;;AAEgB;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;;;;AANC;;AAAmC;;AAAnC;AAAA;;;;;AAST;;AAAA;;AAAA;AAYA;;AAAe;AAAf;;AAER;;;AAMe;;AAAqB;AAArB;AAAP;AACyB;;AAAlB;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAIO;;AAAA;;AAAoB;;AAApB;AAAP;AAEI;;AAAA;;AAAsB;;AAAtB;AADJ;AAS6B;;AAAe;;AAAf;AAAZ;AAJoB;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAArC;;AAAuB;;AAAvB;AAAA;AAAA;;AAOR;;;AAWe;;AAAqB;;AAArB;AAAP;AAEO;;AAAA;;AAAoB;;;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;;;AAApB;AAAP;AACO;;AAAA;;AAEuC;;AAAA;AAAA;AAAA;;AAAnB;;AAAA;AAAA;AAAA;;AAAZ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AADF;;;AADc;AAAA;;;AAApB;AAAP;AAKI;;AAAA;;AAAA;AAAoB;;AAApB;AAAA;;;AACI;;AAAoB;;;;;;AAApB;AADJ;;;AAEI;;AAAmB;;AAAnB;AAFJ;;;;AADJ;AAMO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AAGI;;AAAA;;AAAsB;;AAAtB;AADJ;AAII;;AAAA;;AAAsB;;AAAtB;AADJ;AAII;;AAAA;;AAAsB;;AAAtB;AADJ;AAII;;AAAA;;AAAsB;;AAAtB;AADJ;AAII;;AAAA;;AAAsB;;AAAtB;AADJ;AAKI;;AAAc;;;AAAd;AAAA;;;AACI;;AAAc;;;AAAd;AADJ;;;AAEI;;AAAoB;AAApB;AAFJ;;;;AADJ;AAOmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAnB;AAAA;;AAAA;AAA0D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA1D;AAS0B;;AAA0B;;;AAA1B;AAAZ;AACA;;AAAA;AACiB;;AAPZ;AADiB;;AAAA;AAIjB;;AAJiB;AAKhB;;;;AALgB;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAApC;;AAAA;;AAAA;AAAA;AAAA;AAcoC;;AAAA;AAApC;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAKA;AAAwB;;AAAxB;AAAsC;;;;;;;AAAtC;AAYwB;AAAG;;AAA3B;AAGgB;AAAhB;AAAA;;AAAA;AAAA;;;;;;;;;;AAER;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAamB;;AAAA;;;AAAA;;AAAA;;;AAGX;AAAA;;;AAEI;;;AACG;AAAwB;;AAAxB;AAAA;AAAA;AAAA;;;AADH;AADJ;AAMuB;AAAwB;;AAAxB;AAAA;AAAA;AAAA;;;AAAnB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AADJ;AAIO;;AAAU;;AAAV;AAAP;AACO;;AAAa;;;AAAb;AAAP;;;;AClOR;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAQ;AAAA;;AAEW;AAAA;;;AAAA;AAAA;;;AAGX;;;AA2CQ;;AAAA;AAAA;;AAKD;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;;AAAA;;AACX;AAAQ;AAAR;;AAII;AAAM;AAAN;;;;;;;AAAA;;;AAEuC;;AAPhC;AAOgC;AAAa;AAAb;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAzB5B;;AAAA;;;ADkMI;AAAW;ACrMZ;;AAAA;;;AAIF;AAJE;;;;;;;;;AA0BH;;;AAM0B;;AAAA;;AAAA;AAhBlB;;AAgBR;AAAA;;AACQ;;;;;;;;;;;;;;;;;;AAIR;;AAhBO;AAgBP;AAAa;AAAb;AAAA;AAAA;;AAAiB;;AAAjB;;;;;;;AAAA;;;AAE4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AApC5B;;AAAA;;;ADkMI;AAAW;ACrMZ;;AAAA;;;AAIF;AAJE;;;;;;;;;AAqCH;;;AAM0B;;AAAA;;AAAA;AAAhB;;AAAA;AAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACmB;AAAe;AAAf;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AAIR;;AAAM;AAAN;;;;;;;AAAA;;;AAE4C;;AA7BrC;AA6BqC;AAAa;AAAb;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AA/CjC;;AAAA;AAAA;;;ADkMI;AAAW;ACrMZ;;AAAA;;;AAIF;AAJE;;;;;;;;;AAgDH;;;AAM0B;;AAAA;;AAAA;AAAhB;;AAAA;AAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACmB;AAAe;AAAf;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AAIR;;AAtCO;AAsCP;AAAa;AAAb;AAAA;AAAA;;AAAiB;;AAAjB;;;;;;;AAAA;;;AAEiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AA1DjC;;AAAA;AAAA;;;ADkMI;AAAW;ACrMZ;;AAAA;;;AAIF;AAJE;;;;;;;;;AA2DH;;;AAM0B;;AAAA;;AAAA;AAAhB;;AAAA;AAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACmB;AAAe;AAAf;AAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;AAlHI;AAAA;;AAAP;AAAL;;AAAK;;AAAA;;AAAA;AAAb;;;AAEqB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAV;;AAAA;AAAX;;;AACmB;AA4BR;;;AACQ;ADoNX;ACjHY;;AAAT;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AD0HX;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAE+B;AAAA;;;AAAA;AAAA;;;ACnIX;;AAAT;AAAA;AAAA;;AAAA;ADqIC;;AAAA;AAAA;ACrID;AAAA;;AAAA;ADsIC;AAAA;;;;;;;;;ACtIQ;;AAAT;AAAA;AAAA;;AAAA;ADyIH;;AAAA;AAAA;ACzIG;AAAA;;AAAA;AD0IH;AAC4B;;AAAA;ACpIzB;;AAAA;AAAA;ADoIH;AAWS;;AAMT;;AAAA;;;;;;;;;;;;;;ACxRK;;AAAA;AAAA;AAAA;;;;;AAIF;AA2BI;;;AAOJ;AD8MI;;;AAwCA;;AAAP;AACO;;AAAc;;AAAd;AAAP;",
  "op_pc_offset": 2,
  "pc_events": {
    "0": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "2": {
      "op": "bz main_after_if_else@19",
      "stack_out": []
    },
    "5": {
      "op": "pushbytess 0x6333cd9d 0xb66d2f56 0x8996bb37 0x5381d6a8 0x7815fe41 0x0b42d12a 0xbbfa8e01 0xf85053ad 0x06f0d132 0x5be219f0 0x3ffbca24 0x81e90542 0xf4b7eabb 0xa0e81872 // method \"calc_single_box_cost(uint8,uint16)uint64\", method \"read_gen_unix()uint64\", method \"read_grid_cell_value_by_index(uint64,uint8)uint8\", method \"read_grid_cell_value_at_coords(uint64,uint8,uint8)uint8\", method \"does_box_user_registry_exist(account)bool\", method \"does_box_game_grid_exist(uint64)bool\", method \"does_box_game_state_exist(uint64)bool\", method \"does_box_game_character_exist(account)bool\", method \"read_box_game_lobby(uint64)address[]\", method \"generate()void\", method \"get_box_user_registry(pay)void\", method \"new_game(pay,pay,pay,pay,pay,uint8)void\", method \"mimc_tester((uint8,uint8),(uint8,uint8)[],uint8,uint8,uint64)byte[]\", method \"update()void\"",
      "defined_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(does_box_game_character_exist(account)bool)",
        "Method(does_box_game_grid_exist(uint64)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(does_box_user_registry_exist(account)bool)",
        "Method(generate()void)",
        "Method(get_box_user_registry(pay)void)",
        "Method(mimc_tester((uint8,uint8),(uint8,uint8)[],uint8,uint8,uint64)byte[])",
        "Method(new_game(pay,pay,pay,pay,pay,uint8)void)",
        "Method(read_box_game_lobby(uint64)address[])",
        "Method(read_gen_unix()uint64)",
        "Method(read_grid_cell_value_at_coords(uint64,uint8,uint8)uint8)",
        "Method(read_grid_cell_value_by_index(uint64,uint8)uint8)",
        "Method(update()void)"
      ],
      "stack_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(read_grid_cell_value_by_index(uint64,uint8)uint8)",
        "Method(read_grid_cell_value_at_coords(uint64,uint8,uint8)uint8)",
        "Method(does_box_user_registry_exist(account)bool)",
        "Method(does_box_game_grid_exist(uint64)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(does_box_game_character_exist(account)bool)",
        "Method(read_box_game_lobby(uint64)address[])",
        "Method(generate()void)",
        "Method(get_box_user_registry(pay)void)",
        "Method(new_game(pay,pay,pay,pay,pay,uint8)void)",
        "Method(mimc_tester((uint8,uint8),(uint8,uint8)[],uint8,uint8,uint64)byte[])",
        "Method(update()void)"
      ]
    },
    "77": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(does_box_game_character_exist(account)bool)",
        "Method(does_box_game_grid_exist(uint64)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(does_box_user_registry_exist(account)bool)",
        "Method(generate()void)",
        "Method(get_box_user_registry(pay)void)",
        "Method(mimc_tester((uint8,uint8),(uint8,uint8)[],uint8,uint8,uint64)byte[])",
        "Method(new_game(pay,pay,pay,pay,pay,uint8)void)",
        "Method(read_box_game_lobby(uint64)address[])",
        "Method(read_gen_unix()uint64)",
        "Method(read_grid_cell_value_at_coords(uint64,uint8,uint8)uint8)",
        "Method(read_grid_cell_value_by_index(uint64,uint8)uint8)",
        "Method(update()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(calc_single_box_cost(uint8,uint16)uint64)",
        "Method(read_gen_unix()uint64)",
        "Method(read_grid_cell_value_by_index(uint64,uint8)uint8)",
        "Method(read_grid_cell_value_at_coords(uint64,uint8,uint8)uint8)",
        "Method(does_box_user_registry_exist(account)bool)",
        "Method(does_box_game_grid_exist(uint64)bool)",
        "Method(does_box_game_state_exist(uint64)bool)",
        "Method(does_box_game_character_exist(account)bool)",
        "Method(read_box_game_lobby(uint64)address[])",
        "Method(generate()void)",
        "Method(get_box_user_registry(pay)void)",
        "Method(new_game(pay,pay,pay,pay,pay,uint8)void)",
        "Method(mimc_tester((uint8,uint8),(uint8,uint8)[],uint8,uint8,uint64)byte[])",
        "Method(update()void)",
        "tmp%2#0"
      ]
    },
    "80": {
      "op": "match main_calc_single_box_cost_route@5 main_read_gen_unix_route@6 main_read_grid_cell_value_by_index_route@7 main_read_grid_cell_value_at_coords_route@8 main_does_box_user_registry_exist_route@9 main_does_box_game_grid_exist_route@10 main_does_box_game_state_exist_route@11 main_does_box_game_character_exist_route@12 main_read_box_game_lobby_route@13 main_generate_route@14 main_get_box_user_registry_route@15 main_new_game_route@16 main_mimc_tester_route@17 main_update_route@18",
      "stack_out": []
    },
    "110": {
      "block": "main_after_if_else@19",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "111": {
      "op": "return",
      "stack_out": []
    },
    "112": {
      "block": "main_update_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "114": {
      "op": "pushint 4 // UpdateApplication",
      "defined_out": [
        "UpdateApplication",
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0",
        "UpdateApplication"
      ]
    },
    "116": {
      "op": "==",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "117": {
      "error": "OnCompletion is not UpdateApplication",
      "op": "assert // OnCompletion is not UpdateApplication",
      "stack_out": []
    },
    "118": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "120": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "121": {
      "callsub": "smart_contracts.salvo.contract.Salvo.update",
      "op": "callsub update"
    },
    "124": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "125": {
      "op": "return",
      "stack_out": []
    },
    "126": {
      "block": "main_mimc_tester_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "128": {
      "op": "!",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "129": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "130": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "132": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "133": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[2]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[2]%1#0"
      ]
    },
    "136": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[2]%1#0",
        "tmp%82#0"
      ],
      "stack_out": [
        "reinterpret_bytes[2]%1#0",
        "tmp%82#0"
      ]
    },
    "139": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[2]%1#0",
        "tmp%82#0"
      ],
      "stack_out": [
        "reinterpret_bytes[2]%1#0",
        "tmp%82#0",
        "reinterpret_bytes[1]%7#0"
      ]
    },
    "142": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[2]%1#0",
        "tmp%82#0"
      ],
      "stack_out": [
        "reinterpret_bytes[2]%1#0",
        "tmp%82#0",
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[1]%8#0"
      ]
    },
    "145": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[2]%1#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%82#0"
      ],
      "stack_out": [
        "reinterpret_bytes[2]%1#0",
        "tmp%82#0",
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "148": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[1]%8#0",
        "reinterpret_bytes[2]%1#0",
        "tmp%82#0",
        "tmp%83#0"
      ],
      "stack_out": [
        "reinterpret_bytes[2]%1#0",
        "tmp%82#0",
        "reinterpret_bytes[1]%7#0",
        "reinterpret_bytes[1]%8#0",
        "tmp%83#0"
      ]
    },
    "149": {
      "callsub": "smart_contracts.salvo.contract.Salvo.mimc_tester",
      "op": "callsub mimc_tester",
      "defined_out": [
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0"
      ]
    },
    "152": {
      "op": "dup",
      "defined_out": [
        "to_encode%6#0",
        "to_encode%6#0 (copy)"
      ],
      "stack_out": [
        "to_encode%6#0",
        "to_encode%6#0 (copy)"
      ]
    },
    "153": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0",
        "length%0#0"
      ]
    },
    "154": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0",
        "as_bytes%0#0"
      ]
    },
    "155": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0",
        "length_uint16%0#0"
      ]
    },
    "158": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%6#0"
      ]
    },
    "159": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "160": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "161": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "162": {
      "op": "concat",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "163": {
      "op": "log",
      "stack_out": []
    },
    "164": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "165": {
      "op": "return",
      "stack_out": []
    },
    "166": {
      "block": "main_new_game_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "168": {
      "op": "!",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "169": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "170": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "172": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "173": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "175": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0",
        "5"
      ]
    },
    "177": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "178": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "179": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "181": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "182": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "183": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "184": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%74#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%74#0"
      ]
    },
    "186": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "gtxn_idx%1#0",
        "tmp%74#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%74#0",
        "4"
      ]
    },
    "188": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "189": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "190": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "192": {
      "op": "intc_0 // pay",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "193": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "194": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "195": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%75#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%75#0"
      ]
    },
    "197": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%75#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%75#0",
        "3"
      ]
    },
    "199": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0"
      ]
    },
    "200": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "201": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "203": {
      "op": "intc_0 // pay",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ]
    },
    "204": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "205": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0"
      ]
    },
    "206": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%76#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%76#0"
      ]
    },
    "208": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%76#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "tmp%76#0",
        "2"
      ]
    },
    "209": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0"
      ]
    },
    "210": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "211": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "213": {
      "op": "intc_0 // pay",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "214": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "215": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0"
      ]
    },
    "216": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%77#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%77#0"
      ]
    },
    "218": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%77#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "tmp%77#0",
        "1"
      ]
    },
    "219": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0"
      ]
    },
    "220": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "221": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "223": {
      "op": "intc_0 // pay",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay"
      ]
    },
    "224": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "225": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0"
      ]
    },
    "226": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "reinterpret_bytes[1]%6#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%3#0",
        "gtxn_idx%4#0",
        "gtxn_idx%5#0",
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "229": {
      "callsub": "smart_contracts.salvo.contract.Salvo.new_game",
      "op": "callsub new_game",
      "stack_out": []
    },
    "232": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "233": {
      "op": "return",
      "stack_out": []
    },
    "234": {
      "block": "main_get_box_user_registry_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "236": {
      "op": "!",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "237": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "238": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "240": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "241": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "243": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0",
        "1"
      ]
    },
    "244": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "245": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "246": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "248": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "249": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "250": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "251": {
      "callsub": "smart_contracts.salvo.contract.Salvo.get_box_user_registry",
      "op": "callsub get_box_user_registry",
      "stack_out": []
    },
    "254": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "255": {
      "op": "return",
      "stack_out": []
    },
    "256": {
      "block": "main_generate_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "258": {
      "op": "!",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "259": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "260": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "262": {
      "op": "!",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "263": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "264": {
      "callsub": "smart_contracts.salvo.contract.Salvo.generate",
      "op": "callsub generate"
    },
    "267": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "268": {
      "op": "return",
      "stack_out": []
    },
    "269": {
      "block": "main_read_box_game_lobby_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "271": {
      "op": "!",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "272": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "273": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "275": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "276": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "279": {
      "op": "btoi",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "280": {
      "callsub": "smart_contracts.salvo.contract.Salvo.read_box_game_lobby",
      "op": "callsub read_box_game_lobby",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "283": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0",
        "0x151f7c75"
      ]
    },
    "284": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%58#0"
      ]
    },
    "285": {
      "op": "concat",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "286": {
      "op": "log",
      "stack_out": []
    },
    "287": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "288": {
      "op": "return",
      "stack_out": []
    },
    "289": {
      "block": "main_does_box_game_character_exist_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "291": {
      "op": "!",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "292": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "293": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "295": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "296": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "299": {
      "op": "btoi",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "300": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "302": {
      "callsub": "smart_contracts.salvo.contract.Salvo.does_box_game_character_exist",
      "op": "callsub does_box_game_character_exist",
      "defined_out": [
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0"
      ]
    },
    "305": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "0x00"
      ]
    },
    "306": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "0x00",
        "0"
      ]
    },
    "307": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%5#0"
      ]
    },
    "309": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%3#0"
      ],
      "stack_out": [
        "encoded_bool%3#0"
      ]
    },
    "310": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%3#0"
      ],
      "stack_out": [
        "encoded_bool%3#0",
        "0x151f7c75"
      ]
    },
    "311": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%3#0"
      ]
    },
    "312": {
      "op": "concat",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "313": {
      "op": "log",
      "stack_out": []
    },
    "314": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "315": {
      "op": "return",
      "stack_out": []
    },
    "316": {
      "block": "main_does_box_game_state_exist_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "318": {
      "op": "!",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "319": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "320": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "322": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "323": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "326": {
      "op": "btoi",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "327": {
      "callsub": "smart_contracts.salvo.contract.Salvo.does_box_game_state_exist",
      "op": "callsub does_box_game_state_exist",
      "defined_out": [
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0"
      ]
    },
    "330": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0",
        "0x00"
      ]
    },
    "331": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0",
        "0x00",
        "0"
      ]
    },
    "332": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%4#0"
      ]
    },
    "334": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%2#0"
      ],
      "stack_out": [
        "encoded_bool%2#0"
      ]
    },
    "335": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%2#0"
      ],
      "stack_out": [
        "encoded_bool%2#0",
        "0x151f7c75"
      ]
    },
    "336": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%2#0"
      ]
    },
    "337": {
      "op": "concat",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "338": {
      "op": "log",
      "stack_out": []
    },
    "339": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "340": {
      "op": "return",
      "stack_out": []
    },
    "341": {
      "block": "main_does_box_game_grid_exist_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "343": {
      "op": "!",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "344": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "345": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "347": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "348": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "351": {
      "op": "btoi",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "352": {
      "callsub": "smart_contracts.salvo.contract.Salvo.does_box_game_grid_exist",
      "op": "callsub does_box_game_grid_exist",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "355": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "0x00"
      ]
    },
    "356": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "0x00",
        "0"
      ]
    },
    "357": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%3#0"
      ]
    },
    "359": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0"
      ]
    },
    "360": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%1#0"
      ],
      "stack_out": [
        "encoded_bool%1#0",
        "0x151f7c75"
      ]
    },
    "361": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%1#0"
      ]
    },
    "362": {
      "op": "concat",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "363": {
      "op": "log",
      "stack_out": []
    },
    "364": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "365": {
      "op": "return",
      "stack_out": []
    },
    "366": {
      "block": "main_does_box_user_registry_exist_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "368": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "369": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "370": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "372": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "373": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "376": {
      "op": "btoi",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "377": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "379": {
      "callsub": "smart_contracts.salvo.contract.Salvo.does_box_user_registry_exist",
      "op": "callsub does_box_user_registry_exist",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "382": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "0x00"
      ]
    },
    "383": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "0x00",
        "0"
      ]
    },
    "384": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "to_encode%2#0"
      ]
    },
    "386": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "387": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0",
        "0x151f7c75"
      ]
    },
    "388": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_bool%0#0"
      ]
    },
    "389": {
      "op": "concat",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "390": {
      "op": "log",
      "stack_out": []
    },
    "391": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "392": {
      "op": "return",
      "stack_out": []
    },
    "393": {
      "block": "main_read_grid_cell_value_at_coords_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "395": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "396": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "397": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "399": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "400": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "403": {
      "op": "btoi",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "404": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%2#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "407": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[1]%2#0",
        "reinterpret_bytes[1]%3#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "reinterpret_bytes[1]%2#0",
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "410": {
      "callsub": "smart_contracts.salvo.contract.Salvo.read_grid_cell_value_at_coords",
      "op": "callsub read_grid_cell_value_at_coords",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "413": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "0x151f7c75"
      ]
    },
    "414": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%25#0"
      ]
    },
    "415": {
      "op": "concat",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "416": {
      "op": "log",
      "stack_out": []
    },
    "417": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "418": {
      "op": "return",
      "stack_out": []
    },
    "419": {
      "block": "main_read_grid_cell_value_by_index_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "421": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "422": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "423": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "425": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "426": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "429": {
      "op": "btoi",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "430": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "433": {
      "callsub": "smart_contracts.salvo.contract.Salvo.read_grid_cell_value_by_index",
      "op": "callsub read_grid_cell_value_by_index",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "436": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "0x151f7c75"
      ]
    },
    "437": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%18#0"
      ]
    },
    "438": {
      "op": "concat",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "439": {
      "op": "log",
      "stack_out": []
    },
    "440": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "441": {
      "op": "return",
      "stack_out": []
    },
    "442": {
      "block": "main_read_gen_unix_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "444": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "445": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "446": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "448": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "449": {
      "op": "intc 5 // TMPL_GEN_UNIX",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "451": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "452": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "453": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "454": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "455": {
      "op": "log",
      "stack_out": []
    },
    "456": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "457": {
      "op": "return",
      "stack_out": []
    },
    "458": {
      "block": "main_calc_single_box_cost_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "460": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "461": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "462": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "464": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "465": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "468": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[2]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_bytes[2]%0#0"
      ]
    },
    "471": {
      "callsub": "smart_contracts.salvo.contract.Salvo.calc_single_box_cost",
      "op": "callsub calc_single_box_cost",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "474": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "475": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "476": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "477": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "478": {
      "op": "log",
      "stack_out": []
    },
    "479": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "480": {
      "op": "return",
      "stack_out": []
    },
    "481": {
      "subroutine": "smart_contracts.salvo.subroutines.assert_coords_in_range",
      "params": {
        "row#0": "bytes",
        "col#0": "bytes"
      },
      "block": "assert_coords_in_range",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "484": {
      "op": "frame_dig -2",
      "defined_out": [
        "row#0 (copy)"
      ],
      "stack_out": [
        "row#0 (copy)"
      ]
    },
    "486": {
      "op": "pushbytes 0x0b",
      "defined_out": [
        "0x0b",
        "row#0 (copy)"
      ],
      "stack_out": [
        "row#0 (copy)",
        "0x0b"
      ]
    },
    "489": {
      "op": "b<",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "490": {
      "op": "bz assert_coords_in_range_bool_false@3",
      "stack_out": []
    },
    "493": {
      "op": "frame_dig -1",
      "defined_out": [
        "col#0 (copy)"
      ],
      "stack_out": [
        "col#0 (copy)"
      ]
    },
    "495": {
      "op": "pushbytes 0x0b",
      "stack_out": [
        "col#0 (copy)",
        "0x0b"
      ]
    },
    "498": {
      "op": "b<",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "499": {
      "op": "bz assert_coords_in_range_bool_false@3",
      "stack_out": []
    },
    "502": {
      "op": "intc_0 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "503": {
      "block": "assert_coords_in_range_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "Invalid position coordinates. Ensure boh row and column indices are within valid range.",
      "op": "assert // Invalid position coordinates. Ensure boh row and column indices are within valid range.",
      "defined_out": [],
      "stack_out": []
    },
    "504": {
      "retsub": true,
      "op": "retsub"
    },
    "505": {
      "block": "assert_coords_in_range_bool_false@3",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "506": {
      "op": "b assert_coords_in_range_bool_merge@4"
    },
    "509": {
      "subroutine": "smart_contracts.salvo.subroutines.convert_grid_coords_to_index",
      "params": {
        "row#0": "bytes",
        "col#0": "bytes"
      },
      "block": "convert_grid_coords_to_index",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "512": {
      "op": "frame_dig -2",
      "defined_out": [
        "row#0 (copy)"
      ],
      "stack_out": [
        "row#0 (copy)"
      ]
    },
    "514": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "515": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "11",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "11"
      ]
    },
    "517": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "518": {
      "op": "frame_dig -1",
      "defined_out": [
        "col#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "col#0 (copy)"
      ]
    },
    "520": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "521": {
      "op": "+",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "522": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "523": {
      "op": "dup",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "524": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "525": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "8"
      ]
    },
    "526": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "527": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "528": {
      "op": "extract 7 1",
      "defined_out": [
        "uint8%0#0"
      ],
      "stack_out": [
        "uint8%0#0"
      ]
    },
    "531": {
      "retsub": true,
      "op": "retsub"
    },
    "532": {
      "subroutine": "smart_contracts.salvo.subroutines.get_grid_cell_value",
      "params": {
        "game_id#0": "uint64",
        "box_game_grid#0": "bytes",
        "i#0": "bytes"
      },
      "block": "get_grid_cell_value",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "535": {
      "op": "frame_dig -3",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "537": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "538": {
      "op": "frame_dig -2",
      "defined_out": [
        "box_game_grid#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_game_grid#0 (copy)"
      ]
    },
    "540": {
      "op": "swap",
      "stack_out": [
        "box_game_grid#0 (copy)",
        "encoded_value%0#0"
      ]
    },
    "541": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "542": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "543": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "544": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "546": {
      "error": "Game ID not found. Ensure the game was created and still exists.",
      "op": "assert // Game ID not found. Ensure the game was created and still exists.",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "547": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "i#0 (copy)"
      ]
    },
    "549": {
      "op": "btoi",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ]
    },
    "550": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "551": {
      "op": "pushint 121 // 121",
      "defined_out": [
        "121",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "121"
      ]
    },
    "553": {
      "op": "<",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "554": {
      "error": "Invalid position index. Ensure index value is within valid range.",
      "op": "assert // Invalid position index. Ensure index value is within valid range.",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ]
    },
    "555": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "556": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "557": {
      "error": "check BoxMap entry exists",
      "op": "assert // check BoxMap entry exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "558": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "559": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0",
        "1"
      ]
    },
    "560": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "561": {
      "retsub": true,
      "op": "retsub"
    },
    "562": {
      "subroutine": "smart_contracts.salvo.contract.Salvo.calc_single_box_cost",
      "params": {
        "key_size#0": "bytes",
        "value_size#0": "bytes"
      },
      "block": "calc_single_box_cost",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "565": {
      "op": "frame_dig -2",
      "defined_out": [
        "key_size#0 (copy)"
      ],
      "stack_out": [
        "key_size#0 (copy)"
      ]
    },
    "567": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "568": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%1#0",
        "value_size#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "value_size#0 (copy)"
      ]
    },
    "570": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "571": {
      "op": "+",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "572": {
      "op": "pushint 400 // 400",
      "defined_out": [
        "400",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "400"
      ]
    },
    "575": {
      "op": "*",
      "defined_out": [
        "size_cost#0"
      ],
      "stack_out": [
        "size_cost#0"
      ]
    },
    "576": {
      "op": "pushint 2500 // 2500",
      "defined_out": [
        "2500",
        "size_cost#0"
      ],
      "stack_out": [
        "size_cost#0",
        "2500"
      ]
    },
    "579": {
      "op": "+",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "580": {
      "retsub": true,
      "op": "retsub"
    },
    "581": {
      "subroutine": "smart_contracts.salvo.contract.Salvo.read_grid_cell_value_by_index",
      "params": {
        "game_id#0": "uint64",
        "i#0": "bytes"
      },
      "block": "read_grid_cell_value_by_index",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "584": {
      "op": "frame_dig -2",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "586": {
      "op": "bytec_2 // \"g_\"",
      "defined_out": [
        "\"g_\"",
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)",
        "\"g_\""
      ]
    },
    "587": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"g_\"",
        "game_id#0 (copy)",
        "i#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)",
        "\"g_\"",
        "i#0 (copy)"
      ]
    },
    "589": {
      "callsub": "smart_contracts.salvo.subroutines.get_grid_cell_value",
      "op": "callsub get_grid_cell_value",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "592": {
      "retsub": true,
      "op": "retsub"
    },
    "593": {
      "subroutine": "smart_contracts.salvo.contract.Salvo.read_grid_cell_value_at_coords",
      "params": {
        "game_id#0": "uint64",
        "x#0": "bytes",
        "y#0": "bytes"
      },
      "block": "read_grid_cell_value_at_coords",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "596": {
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "x#0 (copy)"
      ]
    },
    "598": {
      "op": "frame_dig -1",
      "defined_out": [
        "x#0 (copy)",
        "y#0 (copy)"
      ],
      "stack_out": [
        "x#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "600": {
      "callsub": "smart_contracts.salvo.subroutines.convert_grid_coords_to_index",
      "op": "callsub convert_grid_coords_to_index",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "603": {
      "op": "frame_dig -3",
      "defined_out": [
        "game_id#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "game_id#0 (copy)"
      ]
    },
    "605": {
      "op": "bytec_2 // \"g_\"",
      "defined_out": [
        "\"g_\"",
        "game_id#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "game_id#0 (copy)",
        "\"g_\""
      ]
    },
    "606": {
      "op": "uncover 2",
      "stack_out": [
        "game_id#0 (copy)",
        "\"g_\"",
        "tmp%0#0"
      ]
    },
    "608": {
      "callsub": "smart_contracts.salvo.subroutines.get_grid_cell_value",
      "op": "callsub get_grid_cell_value",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "611": {
      "retsub": true,
      "op": "retsub"
    },
    "612": {
      "subroutine": "smart_contracts.salvo.contract.Salvo.does_box_user_registry_exist",
      "params": {
        "account#0": "bytes"
      },
      "block": "does_box_user_registry_exist",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "615": {
      "op": "bytec 4 // \"r_\"",
      "defined_out": [
        "\"r_\""
      ],
      "stack_out": [
        "\"r_\""
      ]
    },
    "617": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"r_\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "\"r_\"",
        "account#0 (copy)"
      ]
    },
    "619": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "620": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "621": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "623": {
      "retsub": true,
      "op": "retsub"
    },
    "624": {
      "subroutine": "smart_contracts.salvo.contract.Salvo.does_box_game_grid_exist",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "does_box_game_grid_exist",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "627": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "629": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "630": {
      "op": "bytec_2 // \"g_\"",
      "defined_out": [
        "\"g_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"g_\""
      ]
    },
    "631": {
      "op": "swap",
      "stack_out": [
        "\"g_\"",
        "encoded_value%0#0"
      ]
    },
    "632": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "633": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "634": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "636": {
      "retsub": true,
      "op": "retsub"
    },
    "637": {
      "subroutine": "smart_contracts.salvo.contract.Salvo.does_box_game_state_exist",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "does_box_game_state_exist",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "640": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "game_id#0 (copy)"
      ]
    },
    "642": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "643": {
      "op": "bytec 7 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"s_\""
      ]
    },
    "645": {
      "op": "swap",
      "stack_out": [
        "\"s_\"",
        "encoded_value%0#0"
      ]
    },
    "646": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "647": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "648": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "650": {
      "retsub": true,
      "op": "retsub"
    },
    "651": {
      "subroutine": "smart_contracts.salvo.contract.Salvo.does_box_game_character_exist",
      "params": {
        "account#0": "bytes"
      },
      "block": "does_box_game_character_exist",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "654": {
      "op": "bytec_3 // \"c_\"",
      "defined_out": [
        "\"c_\""
      ],
      "stack_out": [
        "\"c_\""
      ]
    },
    "655": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"c_\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "\"c_\"",
        "account#0 (copy)"
      ]
    },
    "657": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "658": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "659": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "661": {
      "retsub": true,
      "op": "retsub"
    },
    "662": {
      "subroutine": "smart_contracts.salvo.contract.Salvo.read_box_game_lobby",
      "params": {
        "game_id#0": "uint64"
      },
      "block": "read_box_game_lobby",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "665": {
      "op": "intc_1 // 0",
      "stack_out": [
        "user_addr_bytes#0"
      ]
    },
    "666": {
      "op": "dup",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9"
      ]
    },
    "667": {
      "op": "frame_dig -1",
      "defined_out": [
        "game_id#0 (copy)"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_id#0 (copy)"
      ]
    },
    "669": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "encoded_value%0#0"
      ]
    },
    "670": {
      "op": "bytec 8 // \"l_\"",
      "defined_out": [
        "\"l_\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "encoded_value%0#0",
        "\"l_\""
      ]
    },
    "672": {
      "op": "swap",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "\"l_\"",
        "encoded_value%0#0"
      ]
    },
    "673": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "box_prefixed_key%0#0"
      ]
    },
    "674": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "675": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "676": {
      "op": "bury 1",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "678": {
      "error": "Game ID not found. Ensure the game was created and still exists.",
      "op": "assert // Game ID not found. Ensure the game was created and still exists.",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "box_prefixed_key%0#0"
      ]
    },
    "679": {
      "op": "box_get",
      "defined_out": [
        "game_lobby_b_arr#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "maybe_exists%1#0"
      ]
    },
    "680": {
      "op": "swap",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "maybe_exists%1#0",
        "game_lobby_b_arr#0"
      ]
    },
    "681": {
      "op": "dup",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "maybe_exists%1#0",
        "game_lobby_b_arr#0",
        "game_lobby_b_arr#0 (copy)"
      ]
    },
    "682": {
      "op": "uncover 2",
      "defined_out": [
        "game_lobby_b_arr#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "game_lobby_b_arr#0",
        "maybe_exists%1#0"
      ]
    },
    "684": {
      "error": "check self.box_game_lobby entry exists",
      "op": "assert // check self.box_game_lobby entry exists",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "game_lobby_b_arr#0"
      ]
    },
    "685": {
      "op": "pushbytes 0x0000",
      "defined_out": [
        "game_lobby_b_arr#0",
        "users_in_lobby#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "game_lobby_b_arr#0",
        "users_in_lobby#0"
      ]
    },
    "689": {
      "op": "swap",
      "defined_out": [
        "game_lobby_b_arr#0",
        "users_in_lobby#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "game_lobby_b_arr#0"
      ]
    },
    "690": {
      "op": "len",
      "defined_out": [
        "game_lobby_b_arr#0",
        "tmp%0#0",
        "users_in_lobby#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0"
      ]
    },
    "691": {
      "op": "intc_1 // 0",
      "defined_out": [
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0",
        "users_in_lobby#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "692": {
      "block": "read_box_game_lobby_for_header@1",
      "stack_in": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "694": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "696": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "697": {
      "op": "bz read_box_game_lobby_after_for@6",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "700": {
      "op": "frame_dig 2",
      "defined_out": [
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "game_lobby_b_arr#0"
      ]
    },
    "702": {
      "op": "frame_dig 5",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "game_lobby_b_arr#0",
        "i#0"
      ]
    },
    "704": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "game_lobby_b_arr#0",
        "i#0",
        "32"
      ]
    },
    "706": {
      "op": "extract3",
      "defined_out": [
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0",
        "user_addr_bytes#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "user_addr_bytes#0"
      ]
    },
    "707": {
      "op": "dup",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "user_addr_bytes#0",
        "user_addr_bytes#0"
      ]
    },
    "708": {
      "op": "frame_bury 0",
      "defined_out": [
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0",
        "user_addr_bytes#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "user_addr_bytes#0"
      ]
    },
    "710": {
      "op": "pushbytes 0x0000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0",
        "user_addr_bytes#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "user_addr_bytes#0",
        "0x0000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "744": {
      "op": "!=",
      "defined_out": [
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0",
        "tmp%1#0",
        "user_addr_bytes#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "745": {
      "op": "frame_dig 3",
      "defined_out": [
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0",
        "tmp%1#0",
        "user_addr_bytes#0",
        "users_in_lobby#9"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0",
        "users_in_lobby#9"
      ]
    },
    "747": {
      "op": "frame_bury 1",
      "defined_out": [
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0",
        "tmp%1#0",
        "user_addr_bytes#0",
        "users_in_lobby#9"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "749": {
      "op": "bz read_box_game_lobby_after_if_else@4",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "752": {
      "op": "frame_dig 3",
      "defined_out": [
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0",
        "user_addr_bytes#0",
        "users_in_lobby#0",
        "users_in_lobby#9"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "users_in_lobby#0"
      ]
    },
    "754": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0",
        "user_addr_bytes#0",
        "users_in_lobby#0",
        "users_in_lobby#9"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "757": {
      "op": "frame_dig 0",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "user_addr_bytes#0"
      ]
    },
    "759": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0",
        "user_addr_bytes#0",
        "users_in_lobby#0",
        "users_in_lobby#9"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "760": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0",
        "user_addr_bytes#0",
        "users_in_lobby#0",
        "users_in_lobby#9"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "761": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0",
        "user_addr_bytes#0",
        "users_in_lobby#0",
        "users_in_lobby#9"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "762": {
      "op": "pushint 32 // 32",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "764": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "game_lobby_b_arr#0",
        "i#0",
        "len_%0#0",
        "tmp%0#0",
        "user_addr_bytes#0",
        "users_in_lobby#0",
        "users_in_lobby#9"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "765": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "game_lobby_b_arr#0",
        "i#0",
        "tmp%0#0",
        "user_addr_bytes#0",
        "users_in_lobby#0",
        "users_in_lobby#9"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "766": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "game_lobby_b_arr#0",
        "i#0",
        "len_16_bit%0#0",
        "tmp%0#0",
        "user_addr_bytes#0",
        "users_in_lobby#0",
        "users_in_lobby#9"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "769": {
      "op": "swap",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "770": {
      "op": "concat",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "users_in_lobby#9"
      ]
    },
    "771": {
      "op": "frame_bury 1",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "773": {
      "block": "read_box_game_lobby_after_if_else@4",
      "stack_in": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "users_in_lobby#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "users_in_lobby#0"
      ]
    },
    "775": {
      "op": "frame_bury 3",
      "defined_out": [
        "users_in_lobby#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "777": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "users_in_lobby#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "779": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "i#0",
        "users_in_lobby#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "32"
      ]
    },
    "781": {
      "op": "+",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "782": {
      "op": "frame_bury 5",
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "784": {
      "op": "b read_box_game_lobby_for_header@1"
    },
    "787": {
      "block": "read_box_game_lobby_after_for@6",
      "stack_in": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "users_in_lobby#0"
      ],
      "stack_out": [
        "user_addr_bytes#0",
        "users_in_lobby#9",
        "game_lobby_b_arr#0",
        "users_in_lobby#0",
        "tmp%0#0",
        "i#0",
        "users_in_lobby#0"
      ]
    },
    "789": {
      "op": "frame_bury 0"
    },
    "791": {
      "retsub": true,
      "op": "retsub"
    },
    "792": {
      "subroutine": "smart_contracts.salvo.contract.Salvo.generate",
      "params": {},
      "block": "generate",
      "stack_in": [],
      "op": "bytec 5 // \"game_id\"",
      "defined_out": [
        "\"game_id\""
      ],
      "stack_out": [
        "\"game_id\""
      ]
    },
    "794": {
      "op": "intc_0 // 1",
      "defined_out": [
        "\"game_id\"",
        "1"
      ],
      "stack_out": [
        "\"game_id\"",
        "1"
      ]
    },
    "795": {
      "op": "app_global_put",
      "stack_out": []
    },
    "796": {
      "retsub": true,
      "op": "retsub"
    },
    "797": {
      "subroutine": "smart_contracts.salvo.contract.Salvo.get_box_user_registry",
      "params": {
        "box_r_pay#0": "uint64"
      },
      "block": "get_box_user_registry",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "800": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "802": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "2"
      ]
    },
    "803": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "804": {
      "error": "Invalid group size. Ensure number of transactions in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transactions in group is within valid bounds.",
      "stack_out": []
    },
    "805": {
      "op": "bytec 4 // \"r_\"",
      "defined_out": [
        "\"r_\""
      ],
      "stack_out": [
        "\"r_\""
      ]
    },
    "807": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"r_\"",
        "materialized_values%0#0"
      ]
    },
    "809": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "810": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "811": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "813": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "814": {
      "error": "Box found. Ensure the does not exist already.",
      "op": "assert // Box found. Ensure the does not exist already.",
      "stack_out": []
    },
    "815": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_r_pay#0 (copy)"
      ],
      "stack_out": [
        "box_r_pay#0 (copy)"
      ]
    },
    "817": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "819": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "821": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "822": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": []
    },
    "823": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_r_pay#0 (copy)"
      ]
    },
    "825": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "827": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "829": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "830": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": []
    },
    "831": {
      "op": "global Round",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "833": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "30",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "30"
      ]
    },
    "835": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "836": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "837": {
      "op": "pushbytes 0x0000000000000000000000000000000000",
      "defined_out": [
        "0x0000000000000000000000000000000000",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x0000000000000000000000000000000000"
      ]
    },
    "856": {
      "op": "swap",
      "stack_out": [
        "0x0000000000000000000000000000000000",
        "val_as_bytes%0#0"
      ]
    },
    "857": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "858": {
      "op": "bytec 4 // \"r_\"",
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "\"r_\""
      ]
    },
    "860": {
      "op": "txn Sender",
      "defined_out": [
        "\"r_\"",
        "encoded_tuple_buffer%4#0",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "\"r_\"",
        "materialized_values%1#0"
      ]
    },
    "862": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "box_prefixed_key%1#0"
      ]
    },
    "863": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "864": {
      "op": "box_put",
      "stack_out": []
    },
    "865": {
      "retsub": true,
      "op": "retsub"
    },
    "866": {
      "subroutine": "smart_contracts.salvo.contract.Salvo.new_game",
      "params": {
        "box_g_pay#0": "uint64",
        "box_s_pay#0": "uint64",
        "box_c_pay#0": "uint64",
        "box_l_pay#0": "uint64",
        "stake_pay#0": "uint64",
        "lobby_size#0": "bytes"
      },
      "block": "new_game",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "869": {
      "op": "global GroupSize",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "871": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "6"
      ]
    },
    "873": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "874": {
      "error": "Invalid group size. Ensure number of transactions in group is within valid bounds.",
      "op": "assert // Invalid group size. Ensure number of transactions in group is within valid bounds.",
      "stack_out": []
    },
    "875": {
      "op": "frame_dig -6",
      "defined_out": [
        "box_g_pay#0 (copy)"
      ],
      "stack_out": [
        "box_g_pay#0 (copy)"
      ]
    },
    "877": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "879": {
      "op": "pushint 54900 // 54900",
      "defined_out": [
        "54900",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "54900"
      ]
    },
    "883": {
      "op": ">=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "884": {
      "error": "Insufficient payment amount. Value is not enough to cover the minimum requirements.",
      "op": "assert // Insufficient payment amount. Value is not enough to cover the minimum requirements.",
      "stack_out": []
    },
    "885": {
      "op": "frame_dig -5",
      "defined_out": [
        "box_s_pay#0 (copy)"
      ],
      "stack_out": [
        "box_s_pay#0 (copy)"
      ]
    },
    "887": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "889": {
      "op": "pushint 27700 // 27700",
      "defined_out": [
        "27700",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "27700"
      ]
    },
    "893": {
      "op": ">=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "894": {
      "error": "Insufficient payment amount. Value is not enough to cover the minimum requirements.",
      "op": "assert // Insufficient payment amount. Value is not enough to cover the minimum requirements.",
      "stack_out": []
    },
    "895": {
      "op": "frame_dig -4",
      "defined_out": [
        "box_c_pay#0 (copy)"
      ],
      "stack_out": [
        "box_c_pay#0 (copy)"
      ]
    },
    "897": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "899": {
      "op": "pushint 18100 // 18100",
      "defined_out": [
        "18100",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "18100"
      ]
    },
    "903": {
      "op": ">=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "904": {
      "error": "Insufficient payment amount. Value is not enough to cover the minimum requirements.",
      "op": "assert // Insufficient payment amount. Value is not enough to cover the minimum requirements.",
      "stack_out": []
    },
    "905": {
      "op": "frame_dig -3",
      "defined_out": [
        "box_l_pay#0 (copy)"
      ],
      "stack_out": [
        "box_l_pay#0 (copy)"
      ]
    },
    "907": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "909": {
      "op": "frame_dig -1",
      "defined_out": [
        "lobby_size#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "lobby_size#0 (copy)"
      ]
    },
    "911": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "912": {
      "op": "dup",
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "tmp%9#0"
      ]
    },
    "913": {
      "op": "cover 2",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "915": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%9#0",
        "32"
      ]
    },
    "917": {
      "op": "*",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "to_encode%0#0"
      ]
    },
    "918": {
      "op": "dup",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "to_encode%0#0",
        "to_encode%0#0"
      ]
    },
    "919": {
      "op": "cover 2",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%8#0",
        "to_encode%0#0"
      ]
    },
    "921": {
      "op": "itob",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%8#0",
        "val_as_bytes%0#0"
      ]
    },
    "922": {
      "op": "dup",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "923": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "bitlen%0#0"
      ]
    },
    "924": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "bitlen%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "bitlen%0#0",
        "16"
      ]
    },
    "926": {
      "op": "<=",
      "defined_out": [
        "no_overflow%0#0",
        "tmp%8#0",
        "tmp%9#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "no_overflow%0#0"
      ]
    },
    "927": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%8#0",
        "val_as_bytes%0#0"
      ]
    },
    "928": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0",
        "to_encode%0#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%8#0",
        "uint16%0#0"
      ]
    },
    "931": {
      "op": "pushbytes 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%8#0",
        "tmp%9#0",
        "to_encode%0#0",
        "uint16%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%8#0",
        "uint16%0#0",
        "0x0a"
      ]
    },
    "934": {
      "op": "swap",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%8#0",
        "0x0a",
        "uint16%0#0"
      ]
    },
    "935": {
      "callsub": "smart_contracts.salvo.contract.Salvo.calc_single_box_cost",
      "op": "callsub calc_single_box_cost",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "938": {
      "op": ">=",
      "defined_out": [
        "tmp%11#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%11#0"
      ]
    },
    "939": {
      "error": "Insufficient payment amount. Value is not enough to cover the minimum requirements.",
      "op": "assert // Insufficient payment amount. Value is not enough to cover the minimum requirements.",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0"
      ]
    },
    "940": {
      "op": "frame_dig -2",
      "defined_out": [
        "stake_pay#0 (copy)",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "stake_pay#0 (copy)"
      ]
    },
    "942": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%12#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "944": {
      "op": "dup",
      "defined_out": [
        "tmp%12#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%12#0"
      ]
    },
    "945": {
      "op": "intc 4 // 1000000",
      "defined_out": [
        "1000000",
        "tmp%12#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%12#0",
        "1000000"
      ]
    },
    "947": {
      "op": ">=",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "948": {
      "op": "bz new_game_bool_false@4",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "951": {
      "op": "frame_dig 2",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%12#0"
      ]
    },
    "953": {
      "op": "pushint 500000000 // 500000000",
      "defined_out": [
        "500000000",
        "tmp%12#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%12#0",
        "500000000"
      ]
    },
    "959": {
      "op": "<=",
      "defined_out": [
        "tmp%12#0",
        "tmp%15#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%15#0"
      ]
    },
    "960": {
      "op": "bz new_game_bool_false@4",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "963": {
      "op": "frame_dig 2",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%12#0"
      ]
    },
    "965": {
      "op": "intc 4 // 1000000",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%12#0",
        "1000000"
      ]
    },
    "967": {
      "op": "%",
      "defined_out": [
        "tmp%12#0",
        "tmp%17#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%17#0"
      ]
    },
    "968": {
      "op": "bnz new_game_bool_false@4",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "971": {
      "op": "intc_0 // 1",
      "defined_out": [
        "and_result%0#0",
        "tmp%12#0",
        "tmp%9#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "and_result%0#0"
      ]
    },
    "972": {
      "block": "new_game_bool_merge@5",
      "stack_in": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "and_result%0#0"
      ],
      "error": "Invalid stake amount. Value must be a multiple of 1 and within permitted bounds.",
      "op": "assert // Invalid stake amount. Value must be a multiple of 1 and within permitted bounds.",
      "defined_out": [],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "973": {
      "op": "frame_dig -6",
      "defined_out": [
        "box_g_pay#0 (copy)"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "box_g_pay#0 (copy)"
      ]
    },
    "975": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%19#0"
      ]
    },
    "977": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "979": {
      "op": "==",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%21#0"
      ]
    },
    "980": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "981": {
      "op": "frame_dig -5",
      "defined_out": [
        "box_s_pay#0 (copy)"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "983": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%22#0"
      ]
    },
    "985": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "987": {
      "op": "==",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%24#0"
      ]
    },
    "988": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "989": {
      "op": "frame_dig -4",
      "defined_out": [
        "box_c_pay#0 (copy)"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "box_c_pay#0 (copy)"
      ]
    },
    "991": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%25#0"
      ]
    },
    "993": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "995": {
      "op": "==",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%27#0"
      ]
    },
    "996": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "997": {
      "op": "frame_dig -3",
      "defined_out": [
        "box_l_pay#0 (copy)"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "box_l_pay#0 (copy)"
      ]
    },
    "999": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%28#0"
      ]
    },
    "1001": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%28#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%28#0",
        "tmp%29#0"
      ]
    },
    "1003": {
      "op": "==",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%30#0"
      ]
    },
    "1004": {
      "error": "Box payment sender address must match transaction sender address.",
      "op": "assert // Box payment sender address must match transaction sender address.",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "1005": {
      "op": "frame_dig -2",
      "defined_out": [
        "stake_pay#0 (copy)"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "stake_pay#0 (copy)"
      ]
    },
    "1007": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%31#0"
      ]
    },
    "1009": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%31#0",
        "tmp%32#0"
      ]
    },
    "1011": {
      "op": "==",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%33#0"
      ]
    },
    "1012": {
      "error": "Stake payment sender address must match sender address.",
      "op": "assert // Stake payment sender address must match sender address.",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "1013": {
      "op": "frame_dig -6",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "box_g_pay#0 (copy)"
      ]
    },
    "1015": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%34#0"
      ]
    },
    "1017": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%34#0",
        "tmp%35#0"
      ]
    },
    "1019": {
      "op": "==",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%36#0"
      ]
    },
    "1020": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "1021": {
      "op": "frame_dig -5",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "box_s_pay#0 (copy)"
      ]
    },
    "1023": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%37#0"
      ]
    },
    "1025": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%37#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%37#0",
        "tmp%38#0"
      ]
    },
    "1027": {
      "op": "==",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%39#0"
      ]
    },
    "1028": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "1029": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "box_c_pay#0 (copy)"
      ]
    },
    "1031": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%40#0"
      ]
    },
    "1033": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%40#0",
        "tmp%41#0"
      ]
    },
    "1035": {
      "op": "==",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%42#0"
      ]
    },
    "1036": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "1037": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "box_l_pay#0 (copy)"
      ]
    },
    "1039": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%43#0"
      ]
    },
    "1041": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%43#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%43#0",
        "tmp%44#0"
      ]
    },
    "1043": {
      "op": "==",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%45#0"
      ]
    },
    "1044": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "1045": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "stake_pay#0 (copy)"
      ]
    },
    "1047": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%46#0"
      ]
    },
    "1049": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%46#0",
        "tmp%47#0"
      ]
    },
    "1051": {
      "op": "==",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%48#0"
      ]
    },
    "1052": {
      "error": "Box payment receiver address must match application address.",
      "op": "assert // Box payment receiver address must match application address.",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "1053": {
      "op": "frame_dig -1",
      "defined_out": [
        "lobby_size#0 (copy)"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "lobby_size#0 (copy)"
      ]
    },
    "1055": {
      "op": "pushbytes 0x02",
      "defined_out": [
        "0x02",
        "lobby_size#0 (copy)"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "lobby_size#0 (copy)",
        "0x02"
      ]
    },
    "1058": {
      "op": "b>=",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%49#0"
      ]
    },
    "1059": {
      "op": "bz new_game_bool_false@9",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "1062": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "lobby_size#0 (copy)"
      ]
    },
    "1064": {
      "op": "pushbytes 0x04",
      "defined_out": [
        "0x04",
        "lobby_size#0 (copy)"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "lobby_size#0 (copy)",
        "0x04"
      ]
    },
    "1067": {
      "op": "b<=",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%50#0"
      ]
    },
    "1068": {
      "op": "bz new_game_bool_false@9",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "1071": {
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%9#0"
      ]
    },
    "1073": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%9#0",
        "2"
      ]
    },
    "1074": {
      "op": "%",
      "defined_out": [
        "tmp%52#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "tmp%52#0"
      ]
    },
    "1075": {
      "op": "bnz new_game_bool_false@9",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "1078": {
      "op": "intc_0 // 1",
      "defined_out": [
        "and_result%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "and_result%1#0"
      ]
    },
    "1079": {
      "block": "new_game_bool_merge@10",
      "stack_in": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "and_result%1#0"
      ],
      "error": "Invalid Lobby size. Value must be an even number and within permitted bounds.",
      "op": "assert // Invalid Lobby size. Value must be an even number and within permitted bounds.",
      "defined_out": [],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "1080": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "0"
      ]
    },
    "1081": {
      "op": "bytec 5 // \"game_id\"",
      "defined_out": [
        "\"game_id\"",
        "0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "0",
        "\"game_id\""
      ]
    },
    "1083": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1084": {
      "error": "check self.game_id exists",
      "op": "assert // check self.game_id exists",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0"
      ]
    },
    "1085": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1086": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "1087": {
      "op": "bytec_2 // \"g_\"",
      "defined_out": [
        "\"g_\"",
        "encoded_value%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "\"g_\""
      ]
    },
    "1088": {
      "op": "dig 1",
      "defined_out": [
        "\"g_\"",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "\"g_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1090": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1091": {
      "op": "pushbytes 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "box_prefixed_key%0#0",
        "encoded_value%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "box_prefixed_key%0#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      ]
    },
    "1214": {
      "op": "box_put",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "1215": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "tmp%54#0"
      ]
    },
    "1217": {
      "op": "pushint 1200 // 1200",
      "defined_out": [
        "1200",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "tmp%54#0",
        "1200"
      ]
    },
    "1220": {
      "op": "+",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "to_encode%1#0"
      ]
    },
    "1221": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1222": {
      "op": "frame_dig 2",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "tmp%12#0"
      ]
    },
    "1224": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "1225": {
      "op": "txn Sender",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "tmp%55#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%55#0"
      ]
    },
    "1227": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "tmp%55#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%55#0",
        "0x00"
      ]
    },
    "1228": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x00",
        "encoded_value%0#0",
        "lobby_size#0 (copy)",
        "maybe_value%0#0",
        "tmp%12#0",
        "tmp%55#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%55#0",
        "0x00",
        "lobby_size#0 (copy)"
      ]
    },
    "1230": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "tmp%55#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%55#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1231": {
      "op": "bytec 6 // 0x01",
      "defined_out": [
        "0x01",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "tmp%55#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%55#0",
        "encoded_tuple_buffer%2#0",
        "0x01"
      ]
    },
    "1233": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "tmp%55#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%55#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1234": {
      "op": "pushbytes 0x0020",
      "defined_out": [
        "0x0020",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "tmp%55#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%55#0",
        "encoded_tuple_buffer%3#0",
        "0x0020"
      ]
    },
    "1238": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "tmp%55#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%55#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1239": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "tmp%55#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%1#0"
      ]
    },
    "1241": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "tmp%55#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "val_as_bytes%2#0",
        "tmp%55#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1242": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "tmp%55#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%2#0"
      ]
    },
    "1244": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "tmp%55#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1245": {
      "op": "swap",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%6#0",
        "tmp%55#0"
      ]
    },
    "1246": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1247": {
      "op": "bytec 7 // \"s_\"",
      "defined_out": [
        "\"s_\"",
        "encoded_tuple_buffer%7#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%7#0",
        "\"s_\""
      ]
    },
    "1249": {
      "op": "dig 2",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%7#0",
        "\"s_\"",
        "encoded_value%0#0 (copy)"
      ]
    },
    "1251": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_tuple_buffer%7#0",
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%7#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1252": {
      "op": "swap",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "box_prefixed_key%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1253": {
      "op": "box_put",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "1254": {
      "op": "frame_dig 1",
      "defined_out": [
        "encoded_value%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "to_encode%0#0"
      ]
    },
    "1256": {
      "op": "bzero",
      "defined_out": [
        "encoded_value%0#0",
        "materialized_values%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "materialized_values%0#0"
      ]
    },
    "1257": {
      "op": "bytec 8 // \"l_\"",
      "defined_out": [
        "\"l_\"",
        "encoded_value%0#0",
        "materialized_values%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "encoded_value%0#0",
        "materialized_values%0#0",
        "\"l_\""
      ]
    },
    "1259": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "materialized_values%0#0",
        "\"l_\"",
        "encoded_value%0#0"
      ]
    },
    "1261": {
      "op": "concat",
      "defined_out": [
        "game_lobby_bref#0",
        "materialized_values%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_lobby_bref#0"
      ]
    },
    "1262": {
      "op": "dup",
      "defined_out": [
        "game_lobby_bref#0",
        "game_lobby_bref#0 (copy)",
        "materialized_values%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_lobby_bref#0",
        "game_lobby_bref#0 (copy)"
      ]
    },
    "1263": {
      "op": "box_del",
      "defined_out": [
        "game_lobby_bref#0",
        "materialized_values%0#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "to_encode%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_lobby_bref#0",
        "{box_del}"
      ]
    },
    "1264": {
      "op": "pop",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_lobby_bref#0"
      ]
    },
    "1265": {
      "op": "dup",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "materialized_values%0#0",
        "game_lobby_bref#0",
        "game_lobby_bref#0 (copy)"
      ]
    },
    "1266": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "game_lobby_bref#0",
        "game_lobby_bref#0 (copy)",
        "materialized_values%0#0"
      ]
    },
    "1268": {
      "op": "box_put",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "game_lobby_bref#0"
      ]
    },
    "1269": {
      "op": "bytec_3 // \"c_\"",
      "defined_out": [
        "\"c_\"",
        "game_lobby_bref#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "game_lobby_bref#0",
        "\"c_\""
      ]
    },
    "1270": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "game_lobby_bref#0",
        "materialized_values%1#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "game_lobby_bref#0",
        "\"c_\"",
        "materialized_values%1#0"
      ]
    },
    "1272": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%3#0",
        "game_lobby_bref#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "game_lobby_bref#0",
        "box_prefixed_key%3#0"
      ]
    },
    "1273": {
      "op": "pushbytes 0x0106050001",
      "defined_out": [
        "0x0106050001",
        "box_prefixed_key%3#0",
        "game_lobby_bref#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "game_lobby_bref#0",
        "box_prefixed_key%3#0",
        "0x0106050001"
      ]
    },
    "1280": {
      "op": "box_put",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "game_lobby_bref#0"
      ]
    },
    "1281": {
      "op": "intc_1 // 0"
    },
    "1282": {
      "op": "txn Sender",
      "defined_out": [
        "0",
        "game_lobby_bref#0",
        "maybe_value%0#0",
        "tmp%12#0",
        "tmp%59#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "game_lobby_bref#0",
        "0",
        "tmp%59#0"
      ]
    },
    "1284": {
      "op": "box_replace",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0"
      ]
    },
    "1285": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "tmp%12#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1286": {
      "op": "+",
      "defined_out": [
        "materialized_values%2#0",
        "tmp%12#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "materialized_values%2#0"
      ]
    },
    "1287": {
      "op": "bytec 5 // \"game_id\"",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "materialized_values%2#0",
        "\"game_id\""
      ]
    },
    "1289": {
      "op": "swap",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "\"game_id\"",
        "materialized_values%2#0"
      ]
    },
    "1290": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ]
    },
    "1291": {
      "retsub": true,
      "op": "retsub"
    },
    "1292": {
      "block": "new_game_bool_false@9",
      "stack_in": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "and_result%1#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "and_result%1#0"
      ]
    },
    "1293": {
      "op": "b new_game_bool_merge@10"
    },
    "1296": {
      "block": "new_game_bool_false@4",
      "stack_in": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "to_encode%0#0",
        "tmp%12#0",
        "and_result%0#0"
      ]
    },
    "1297": {
      "op": "b new_game_bool_merge@5"
    },
    "1300": {
      "subroutine": "smart_contracts.salvo.contract.Salvo.mimc_tester",
      "params": {
        "position#0": "bytes",
        "movement#0": "bytes",
        "action#0": "bytes",
        "direction#0": "bytes",
        "salt#0": "uint64"
      },
      "block": "mimc_tester",
      "stack_in": [],
      "op": "proto 5 1"
    },
    "1303": {
      "op": "intc_1 // 0",
      "stack_out": [
        "col#0"
      ]
    },
    "1304": {
      "op": "dupn 9",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9"
      ]
    },
    "1306": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0"
      ]
    },
    "1308": {
      "op": "dupn 5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1310": {
      "block": "mimc_tester_while_top@6",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "pushint 10510 // 10510",
      "defined_out": [
        "10510"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "10510"
      ]
    },
    "1313": {
      "op": "global OpcodeBudget",
      "defined_out": [
        "10510",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "10510",
        "tmp%0#1"
      ]
    },
    "1315": {
      "op": ">",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1"
      ]
    },
    "1316": {
      "op": "bz mimc_tester_after_while@11",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1319": {
      "op": "itxn_begin"
    },
    "1320": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "appl"
      ]
    },
    "1322": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1324": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "DeleteApplication"
      ]
    },
    "1326": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1328": {
      "op": "bytec 9 // 0x068101",
      "defined_out": [
        "0x068101",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "0x068101"
      ]
    },
    "1330": {
      "op": "itxn_field ApprovalProgram",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1332": {
      "op": "bytec 9 // 0x068101",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "0x068101"
      ]
    },
    "1334": {
      "op": "itxn_field ClearStateProgram",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1336": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "0"
      ]
    },
    "1337": {
      "op": "itxn_field Fee",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1339": {
      "op": "itxn_submit"
    },
    "1340": {
      "op": "b mimc_tester_while_top@6"
    },
    "1343": {
      "block": "mimc_tester_after_while@11",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "frame_dig -5",
      "defined_out": [
        "position#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "position#0 (copy)"
      ]
    },
    "1345": {
      "error": "Index access is out of bounds",
      "op": "extract 0 1 // on error: Index access is out of bounds",
      "defined_out": [
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#0"
      ]
    },
    "1348": {
      "op": "frame_dig -5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#0",
        "position#0 (copy)"
      ]
    },
    "1350": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "col#0",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#0",
        "col#0"
      ]
    },
    "1353": {
      "op": "dup2",
      "defined_out": [
        "col#0",
        "col#0 (copy)",
        "row#0",
        "row#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#0",
        "col#0",
        "row#0 (copy)",
        "col#0 (copy)"
      ]
    },
    "1354": {
      "callsub": "smart_contracts.salvo.subroutines.assert_coords_in_range",
      "op": "callsub assert_coords_in_range",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#0",
        "col#0"
      ]
    },
    "1357": {
      "callsub": "smart_contracts.salvo.subroutines.convert_grid_coords_to_index",
      "op": "callsub convert_grid_coords_to_index",
      "defined_out": [
        "col#0",
        "reinterpret_biguint%0#0",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0"
      ]
    },
    "1360": {
      "op": "bytec_3 // \"c_\"",
      "defined_out": [
        "\"c_\"",
        "col#0",
        "reinterpret_biguint%0#0",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0",
        "\"c_\""
      ]
    },
    "1361": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "col#0",
        "materialized_values%0#0",
        "reinterpret_biguint%0#0",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0",
        "\"c_\"",
        "materialized_values%0#0"
      ]
    },
    "1363": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "col#0",
        "reinterpret_biguint%0#0",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1364": {
      "op": "box_get",
      "defined_out": [
        "col#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "reinterpret_biguint%0#0",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1365": {
      "error": "check self.box_game_character entry exists",
      "op": "assert // check self.box_game_character entry exists",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0",
        "maybe_value%0#0"
      ]
    },
    "1366": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "col#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "1369": {
      "op": "b==",
      "defined_out": [
        "col#0",
        "row#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#0"
      ]
    },
    "1370": {
      "error": "Position mismatch. Position value must be equal to expected corresponding state value.",
      "op": "assert // Position mismatch. Position value must be equal to expected corresponding state value.",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1371": {
      "op": "bytec_3 // \"c_\"",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "\"c_\""
      ]
    },
    "1372": {
      "op": "txn Sender",
      "defined_out": [
        "\"c_\"",
        "col#0",
        "materialized_values%1#0",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "\"c_\"",
        "materialized_values%1#0"
      ]
    },
    "1374": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "col#0",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "box_prefixed_key%1#0"
      ]
    },
    "1375": {
      "op": "box_get",
      "defined_out": [
        "col#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1376": {
      "error": "check self.box_game_character entry exists",
      "op": "assert // check self.box_game_character entry exists",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "maybe_value%1#0"
      ]
    },
    "1377": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "col#0",
        "reinterpret_biguint%2#0",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%2#0"
      ]
    },
    "1380": {
      "op": "frame_dig -4",
      "defined_out": [
        "col#0",
        "movement#0 (copy)",
        "reinterpret_biguint%2#0",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%2#0",
        "movement#0 (copy)"
      ]
    },
    "1382": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "col#0",
        "movement#0 (copy)",
        "reinterpret_biguint%2#0",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%2#0",
        "movement#0 (copy)",
        "0"
      ]
    },
    "1383": {
      "op": "extract_uint16",
      "defined_out": [
        "col#0",
        "reinterpret_biguint%2#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%2#0",
        "tmp%1#0"
      ]
    },
    "1384": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%2#0",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "1385": {
      "op": "frame_bury 13",
      "defined_out": [
        "col#0",
        "reinterpret_biguint%2#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%2#0",
        "tmp%1#0"
      ]
    },
    "1387": {
      "op": "itob",
      "defined_out": [
        "col#0",
        "reinterpret_biguint%2#0",
        "row#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%2#0",
        "tmp%2#0"
      ]
    },
    "1388": {
      "op": "b>=",
      "defined_out": [
        "col#0",
        "row#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%3#0"
      ]
    },
    "1389": {
      "error": "Movement overflow. Ensure movement length (num of indicies) is within valid range.",
      "op": "assert // Movement overflow. Ensure movement length (num of indicies) is within valid range.",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1390": {
      "op": "frame_dig -3",
      "defined_out": [
        "action#0 (copy)",
        "col#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "action#0 (copy)"
      ]
    },
    "1392": {
      "op": "bytec 6 // 0x01",
      "defined_out": [
        "0x01",
        "action#0 (copy)",
        "col#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "action#0 (copy)",
        "0x01"
      ]
    },
    "1394": {
      "op": "b<=",
      "defined_out": [
        "col#0",
        "row#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%4#0"
      ]
    },
    "1395": {
      "error": "Action overflow. Ensure action index is within valid range.",
      "op": "assert // Action overflow. Ensure action index is within valid range.",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1396": {
      "op": "frame_dig -2",
      "defined_out": [
        "col#0",
        "direction#0 (copy)",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "direction#0 (copy)"
      ]
    },
    "1398": {
      "op": "pushbytes 0x03",
      "defined_out": [
        "0x03",
        "col#0",
        "direction#0 (copy)",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "direction#0 (copy)",
        "0x03"
      ]
    },
    "1401": {
      "op": "b<=",
      "defined_out": [
        "col#0",
        "row#0",
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%5#0"
      ]
    },
    "1402": {
      "error": "Direction overflow. Ensure direction index is within valid range.",
      "op": "assert // Direction overflow. Ensure direction index is within valid range.",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1403": {
      "op": "intc_1 // 0",
      "defined_out": [
        "col#0",
        "item_index_internal%0#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0"
      ]
    },
    "1404": {
      "op": "frame_bury 11",
      "defined_out": [
        "col#0",
        "item_index_internal%0#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1406": {
      "block": "mimc_tester_for_header@14",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0"
      ]
    },
    "1408": {
      "op": "frame_dig 13",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "1410": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "continue_looping%0#0"
      ]
    },
    "1411": {
      "op": "bz mimc_tester_after_for@36",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1414": {
      "op": "frame_dig -4",
      "defined_out": [
        "item_index_internal%0#0",
        "movement#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "movement#0 (copy)"
      ]
    },
    "1416": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "array_head_and_tail%0#0"
      ]
    },
    "1419": {
      "op": "frame_dig 11",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1421": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "2"
      ]
    },
    "1422": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_offset%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1423": {
      "op": "intc_2 // 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "2"
      ]
    },
    "1424": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "coords#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "coords#0"
      ]
    },
    "1425": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "coords#0",
        "coords#0"
      ]
    },
    "1426": {
      "op": "frame_bury 1",
      "defined_out": [
        "coords#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "coords#0"
      ]
    },
    "1428": {
      "op": "dup",
      "defined_out": [
        "coords#0",
        "coords#0 (copy)",
        "item_index_internal%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "coords#0",
        "coords#0 (copy)"
      ]
    },
    "1429": {
      "error": "Index access is out of bounds",
      "op": "extract 0 1 // on error: Index access is out of bounds",
      "defined_out": [
        "coords#0",
        "item_index_internal%0#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "coords#0",
        "row#0"
      ]
    },
    "1432": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#0",
        "coords#0"
      ]
    },
    "1433": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "col#0",
        "coords#0",
        "item_index_internal%0#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#0",
        "col#0"
      ]
    },
    "1436": {
      "callsub": "smart_contracts.salvo.subroutines.assert_coords_in_range",
      "op": "callsub assert_coords_in_range",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1439": {
      "op": "bytec 10 // 0x0000000000000000"
    },
    "1441": {
      "op": "dup",
      "defined_out": [
        "col#0",
        "coords#0",
        "item_index_internal%0#0",
        "neighbors#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "neighbors#0"
      ]
    },
    "1442": {
      "op": "frame_bury 4",
      "defined_out": [
        "col#0",
        "coords#0",
        "item_index_internal%0#0",
        "neighbors#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0"
      ]
    },
    "1444": {
      "op": "frame_dig -5",
      "defined_out": [
        "col#0",
        "coords#0",
        "item_index_internal%0#0",
        "neighbors#0",
        "position#0 (copy)",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "position#0 (copy)"
      ]
    },
    "1446": {
      "error": "Index access is out of bounds",
      "op": "extract 0 1 // on error: Index access is out of bounds",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "row#0"
      ]
    },
    "1449": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "row#0",
        "row#0"
      ]
    },
    "1450": {
      "op": "frame_bury 7",
      "defined_out": [
        "col#0",
        "coords#0",
        "item_index_internal%0#0",
        "neighbors#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "row#0"
      ]
    },
    "1452": {
      "op": "frame_dig -5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "row#0",
        "position#0 (copy)"
      ]
    },
    "1454": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "row#0",
        "col#0"
      ]
    },
    "1457": {
      "op": "frame_bury 0",
      "defined_out": [
        "col#0",
        "coords#0",
        "item_index_internal%0#0",
        "neighbors#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "row#0"
      ]
    },
    "1459": {
      "op": "bytec_0 // 0x00"
    },
    "1460": {
      "op": "dup",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "item_index_internal%0#0",
        "neighbors#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "row#0",
        "count#0",
        "count#0"
      ]
    },
    "1461": {
      "op": "frame_bury 2",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "item_index_internal%0#0",
        "neighbors#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "row#0",
        "count#0"
      ]
    },
    "1463": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "row#0"
      ]
    },
    "1464": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "col#0",
        "coords#0",
        "count#0",
        "item_index_internal%0#0",
        "neighbors#0",
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "row#0",
        "0x00"
      ]
    },
    "1465": {
      "op": "b>",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "item_index_internal%0#0",
        "neighbors#0",
        "row#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%0#0"
      ]
    },
    "1466": {
      "op": "swap",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "row#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%0#0",
        "count#12"
      ]
    },
    "1467": {
      "op": "frame_bury 3",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "row#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%0#0"
      ]
    },
    "1469": {
      "op": "swap",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#0",
        "neighbors#12"
      ]
    },
    "1470": {
      "op": "frame_bury 5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#0"
      ]
    },
    "1472": {
      "op": "bz mimc_tester_after_if_else@18",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1475": {
      "op": "frame_dig -5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "position#0 (copy)"
      ]
    },
    "1477": {
      "op": "intc_1 // 0",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "position#0 (copy)",
        "0"
      ]
    },
    "1478": {
      "op": "getbyte",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%1#0",
        "tmp%1#2"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#2"
      ]
    },
    "1479": {
      "op": "intc_0 // 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#2",
        "1"
      ]
    },
    "1480": {
      "op": "-",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "to_encode%0#0"
      ]
    },
    "1481": {
      "op": "itob",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%1#0",
        "val_as_bytes%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%0#1"
      ]
    },
    "1482": {
      "op": "dup",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%1#0",
        "val_as_bytes%0#1",
        "val_as_bytes%0#1 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%0#1",
        "val_as_bytes%0#1 (copy)"
      ]
    },
    "1483": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%0#0",
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%1#0",
        "val_as_bytes%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%0#1",
        "bitlen%0#0"
      ]
    },
    "1484": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bitlen%0#0",
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%1#0",
        "val_as_bytes%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%0#1",
        "bitlen%0#0",
        "8"
      ]
    },
    "1485": {
      "op": "<=",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "no_overflow%0#0",
        "row#0",
        "tmp%1#0",
        "val_as_bytes%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%0#1",
        "no_overflow%0#0"
      ]
    },
    "1486": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%0#1"
      ]
    },
    "1487": {
      "op": "extract 7 1",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "row#5",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#5"
      ]
    },
    "1490": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#5",
        "row#5"
      ]
    },
    "1491": {
      "op": "frame_bury 8",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "row#5",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#5"
      ]
    },
    "1493": {
      "op": "frame_dig 0",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#5",
        "col#0"
      ]
    },
    "1495": {
      "callsub": "smart_contracts.salvo.subroutines.convert_grid_coords_to_index",
      "op": "callsub convert_grid_coords_to_index",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "row#5",
        "tmp%0#9",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#9"
      ]
    },
    "1498": {
      "op": "intc_0 // 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#9",
        "1"
      ]
    },
    "1499": {
      "op": "bytec_2 // \"g_\"",
      "defined_out": [
        "\"g_\"",
        "1",
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "row#5",
        "tmp%0#9",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#9",
        "1",
        "\"g_\""
      ]
    },
    "1500": {
      "op": "uncover 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "1",
        "\"g_\"",
        "tmp%0#9"
      ]
    },
    "1502": {
      "callsub": "smart_contracts.salvo.subroutines.get_grid_cell_value",
      "op": "callsub get_grid_cell_value",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "reinterpret_biguint%0#0",
        "row#0",
        "row#5",
        "tmp%0#9",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0"
      ]
    },
    "1505": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0",
        "0x00"
      ]
    },
    "1506": {
      "op": "b==",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "row#5",
        "tmp%0#9",
        "tmp%1#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1"
      ]
    },
    "1507": {
      "op": "frame_dig 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1",
        "count#12"
      ]
    },
    "1509": {
      "op": "frame_bury 3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1"
      ]
    },
    "1511": {
      "op": "frame_dig 4",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1",
        "neighbors#12"
      ]
    },
    "1513": {
      "op": "frame_bury 5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1"
      ]
    },
    "1515": {
      "op": "bz mimc_tester_after_if_else@18",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1518": {
      "op": "frame_dig 8",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#5"
      ]
    },
    "1520": {
      "op": "frame_dig 0",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#5",
        "col#0"
      ]
    },
    "1522": {
      "op": "concat",
      "defined_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%5#0",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "row#5",
        "tmp%0#9",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1523": {
      "op": "bytec 10 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%5#0",
        "item_index_internal%0#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "row#5",
        "tmp%0#9",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "1525": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "0x0000000000000000",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1526": {
      "op": "replace2 0",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0"
      ]
    },
    "1528": {
      "op": "bytec 6 // 0x01",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#12"
      ]
    },
    "1530": {
      "op": "frame_bury 3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#12"
      ]
    },
    "1532": {
      "op": "frame_bury 5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1534": {
      "block": "mimc_tester_after_if_else@18",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0"
      ]
    },
    "1536": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0",
        "count#0"
      ]
    },
    "1537": {
      "op": "frame_bury 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0"
      ]
    },
    "1539": {
      "op": "frame_dig 5",
      "defined_out": [
        "count#0",
        "neighbors#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0",
        "neighbors#0"
      ]
    },
    "1541": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0",
        "neighbors#0",
        "neighbors#0 (copy)"
      ]
    },
    "1542": {
      "op": "cover 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "neighbors#0"
      ]
    },
    "1544": {
      "op": "frame_bury 4",
      "defined_out": [
        "count#0",
        "neighbors#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0"
      ]
    },
    "1546": {
      "op": "frame_dig -5",
      "defined_out": [
        "count#0",
        "neighbors#0",
        "position#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "position#0 (copy)"
      ]
    },
    "1548": {
      "op": "intc_1 // 0",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "position#0 (copy)",
        "0"
      ]
    },
    "1549": {
      "op": "getbyte",
      "defined_out": [
        "count#0",
        "neighbors#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%6#1"
      ]
    },
    "1550": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "count#0",
        "neighbors#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%6#1",
        "1"
      ]
    },
    "1551": {
      "op": "+",
      "defined_out": [
        "count#0",
        "neighbors#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%7#1"
      ]
    },
    "1552": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%7#1",
        "tmp%7#1"
      ]
    },
    "1553": {
      "op": "frame_bury 15",
      "defined_out": [
        "count#0",
        "neighbors#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%7#1"
      ]
    },
    "1555": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "11",
        "count#0",
        "neighbors#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%7#1",
        "11"
      ]
    },
    "1557": {
      "op": "<",
      "defined_out": [
        "count#0",
        "neighbors#0",
        "tmp%7#1",
        "tmp%8#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%8#1"
      ]
    },
    "1558": {
      "op": "swap",
      "defined_out": [
        "count#0",
        "count#12",
        "neighbors#0",
        "tmp%7#1",
        "tmp%8#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%8#1",
        "count#12"
      ]
    },
    "1559": {
      "op": "frame_bury 3",
      "defined_out": [
        "count#0",
        "count#12",
        "neighbors#0",
        "tmp%7#1",
        "tmp%8#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%8#1"
      ]
    },
    "1561": {
      "op": "swap",
      "defined_out": [
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%7#1",
        "tmp%8#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%8#1",
        "neighbors#12"
      ]
    },
    "1562": {
      "op": "frame_bury 5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%8#1"
      ]
    },
    "1564": {
      "op": "bz mimc_tester_after_if_else@21",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1567": {
      "op": "frame_dig 15",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%7#1"
      ]
    },
    "1569": {
      "op": "itob",
      "defined_out": [
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%7#1",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%3#0"
      ]
    },
    "1570": {
      "op": "dup",
      "defined_out": [
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%7#1",
        "val_as_bytes%3#0",
        "val_as_bytes%3#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%3#0",
        "val_as_bytes%3#0 (copy)"
      ]
    },
    "1571": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%3#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%7#1",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%3#0",
        "bitlen%3#0"
      ]
    },
    "1572": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bitlen%3#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%7#1",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%3#0",
        "bitlen%3#0",
        "8"
      ]
    },
    "1573": {
      "op": "<=",
      "defined_out": [
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "no_overflow%3#0",
        "tmp%7#1",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%3#0",
        "no_overflow%3#0"
      ]
    },
    "1574": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%3#0"
      ]
    },
    "1575": {
      "op": "extract 7 1",
      "defined_out": [
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#5"
      ]
    },
    "1578": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#5",
        "row#5"
      ]
    },
    "1579": {
      "op": "frame_bury 8",
      "defined_out": [
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#5"
      ]
    },
    "1581": {
      "op": "frame_dig 0",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#5",
        "col#0"
      ]
    },
    "1583": {
      "callsub": "smart_contracts.salvo.subroutines.convert_grid_coords_to_index",
      "op": "callsub convert_grid_coords_to_index",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%0#9",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#9"
      ]
    },
    "1586": {
      "op": "intc_0 // 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#9",
        "1"
      ]
    },
    "1587": {
      "op": "bytec_2 // \"g_\"",
      "defined_out": [
        "\"g_\"",
        "1",
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%0#9",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#9",
        "1",
        "\"g_\""
      ]
    },
    "1588": {
      "op": "uncover 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "1",
        "\"g_\"",
        "tmp%0#9"
      ]
    },
    "1590": {
      "callsub": "smart_contracts.salvo.subroutines.get_grid_cell_value",
      "op": "callsub get_grid_cell_value",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "reinterpret_biguint%0#0",
        "row#5",
        "tmp%0#9",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0"
      ]
    },
    "1593": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "reinterpret_biguint%0#0",
        "row#5",
        "tmp%0#9",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0",
        "0x00"
      ]
    },
    "1594": {
      "op": "b==",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%0#9",
        "tmp%1#1",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1"
      ]
    },
    "1595": {
      "op": "frame_dig 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1",
        "count#12"
      ]
    },
    "1597": {
      "op": "frame_bury 3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1"
      ]
    },
    "1599": {
      "op": "frame_dig 4",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1",
        "neighbors#12"
      ]
    },
    "1601": {
      "op": "frame_bury 5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1"
      ]
    },
    "1603": {
      "op": "bz mimc_tester_after_if_else@21",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1606": {
      "op": "frame_dig 8",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#5"
      ]
    },
    "1608": {
      "op": "frame_dig 0",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#5",
        "col#0"
      ]
    },
    "1610": {
      "op": "concat",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%8#0",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%0#9",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1611": {
      "op": "frame_dig 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%8#0",
        "count#0"
      ]
    },
    "1613": {
      "op": "btoi",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%8#0",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%0#9",
        "tmp%12#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%8#0",
        "tmp%12#0"
      ]
    },
    "1614": {
      "op": "dup",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%8#0",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%0#9",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%8#0",
        "tmp%12#0",
        "tmp%12#0 (copy)"
      ]
    },
    "1615": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%8#0",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%0#9",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%8#0",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "4"
      ]
    },
    "1617": {
      "op": "<",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%8#0",
        "index_is_in_bounds%1#0",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%0#9",
        "tmp%12#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%8#0",
        "tmp%12#0",
        "index_is_in_bounds%1#0"
      ]
    },
    "1618": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%8#0",
        "tmp%12#0"
      ]
    },
    "1619": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%8#0",
        "tmp%12#0",
        "tmp%12#0 (copy)"
      ]
    },
    "1620": {
      "op": "intc_2 // 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%8#0",
        "tmp%12#0",
        "tmp%12#0 (copy)",
        "2"
      ]
    },
    "1621": {
      "op": "*",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%8#0",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%0#9",
        "tmp%12#0",
        "tmp%7#1",
        "write_offset%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%8#0",
        "tmp%12#0",
        "write_offset%1#0"
      ]
    },
    "1622": {
      "op": "frame_dig 4",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%8#0",
        "tmp%12#0",
        "write_offset%1#0",
        "neighbors#0"
      ]
    },
    "1624": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%8#0",
        "tmp%12#0",
        "neighbors#0",
        "write_offset%1#0"
      ]
    },
    "1625": {
      "op": "uncover 3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%12#0",
        "neighbors#0",
        "write_offset%1#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1627": {
      "op": "replace3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%12#0",
        "neighbors#0"
      ]
    },
    "1628": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%12#0"
      ]
    },
    "1629": {
      "op": "intc_0 // 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%12#0",
        "1"
      ]
    },
    "1630": {
      "op": "+",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%0#9",
        "tmp%7#1",
        "to_encode%5#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "to_encode%5#0"
      ]
    },
    "1631": {
      "op": "itob",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%0#9",
        "tmp%7#1",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%5#0"
      ]
    },
    "1632": {
      "op": "dup",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%0#9",
        "tmp%7#1",
        "val_as_bytes%5#0",
        "val_as_bytes%5#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%5#0",
        "val_as_bytes%5#0 (copy)"
      ]
    },
    "1633": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%5#0",
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#5",
        "tmp%0#9",
        "tmp%7#1",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%5#0",
        "bitlen%5#0"
      ]
    },
    "1634": {
      "op": "intc_3 // 8",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%5#0",
        "bitlen%5#0",
        "8"
      ]
    },
    "1635": {
      "op": "<=",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "no_overflow%5#0",
        "row#5",
        "tmp%0#9",
        "tmp%7#1",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%5#0",
        "no_overflow%5#0"
      ]
    },
    "1636": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%5#0"
      ]
    },
    "1637": {
      "op": "extract 7 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#12"
      ]
    },
    "1640": {
      "op": "frame_bury 3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#12"
      ]
    },
    "1642": {
      "op": "frame_bury 5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1644": {
      "block": "mimc_tester_after_if_else@21",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0"
      ]
    },
    "1646": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0",
        "count#0"
      ]
    },
    "1647": {
      "op": "frame_bury 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0"
      ]
    },
    "1649": {
      "op": "frame_dig 5",
      "defined_out": [
        "count#0",
        "neighbors#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0",
        "neighbors#0"
      ]
    },
    "1651": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0",
        "neighbors#0",
        "neighbors#0 (copy)"
      ]
    },
    "1652": {
      "op": "cover 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "neighbors#0"
      ]
    },
    "1654": {
      "op": "frame_bury 4",
      "defined_out": [
        "count#0",
        "neighbors#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0"
      ]
    },
    "1656": {
      "op": "frame_dig 0",
      "defined_out": [
        "col#0",
        "count#0",
        "neighbors#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "col#0"
      ]
    },
    "1658": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "col#0",
        "count#0",
        "neighbors#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "col#0",
        "0x00"
      ]
    },
    "1659": {
      "op": "b>",
      "defined_out": [
        "col#0",
        "count#0",
        "neighbors#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%14#0"
      ]
    },
    "1660": {
      "op": "swap",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%14#0",
        "count#12"
      ]
    },
    "1661": {
      "op": "frame_bury 3",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%14#0"
      ]
    },
    "1663": {
      "op": "swap",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%14#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%14#0",
        "neighbors#12"
      ]
    },
    "1664": {
      "op": "frame_bury 5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%14#0"
      ]
    },
    "1666": {
      "op": "bz mimc_tester_after_if_else@24",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1669": {
      "op": "frame_dig -5",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "position#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "position#0 (copy)"
      ]
    },
    "1671": {
      "op": "intc_0 // 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "position#0 (copy)",
        "1"
      ]
    },
    "1672": {
      "op": "getbyte",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%15#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%15#0"
      ]
    },
    "1673": {
      "op": "intc_0 // 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%15#0",
        "1"
      ]
    },
    "1674": {
      "op": "-",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "to_encode%6#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "to_encode%6#0"
      ]
    },
    "1675": {
      "op": "itob",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%6#0"
      ]
    },
    "1676": {
      "op": "dup",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "val_as_bytes%6#0",
        "val_as_bytes%6#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%6#0",
        "val_as_bytes%6#0 (copy)"
      ]
    },
    "1677": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%6#0",
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%6#0",
        "bitlen%6#0"
      ]
    },
    "1678": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bitlen%6#0",
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%6#0",
        "bitlen%6#0",
        "8"
      ]
    },
    "1679": {
      "op": "<=",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "no_overflow%6#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%6#0",
        "no_overflow%6#0"
      ]
    },
    "1680": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%6#0"
      ]
    },
    "1681": {
      "op": "extract 7 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "col#0"
      ]
    },
    "1684": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "col#0",
        "col#0"
      ]
    },
    "1685": {
      "op": "frame_bury 0",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "col#0"
      ]
    },
    "1687": {
      "op": "frame_dig 7",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "col#0",
        "row#0"
      ]
    },
    "1689": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#0",
        "col#0"
      ]
    },
    "1690": {
      "callsub": "smart_contracts.salvo.subroutines.convert_grid_coords_to_index",
      "op": "callsub convert_grid_coords_to_index",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#9"
      ]
    },
    "1693": {
      "op": "intc_0 // 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#9",
        "1"
      ]
    },
    "1694": {
      "op": "bytec_2 // \"g_\"",
      "defined_out": [
        "\"g_\"",
        "1",
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#9",
        "1",
        "\"g_\""
      ]
    },
    "1695": {
      "op": "uncover 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "1",
        "\"g_\"",
        "tmp%0#9"
      ]
    },
    "1697": {
      "callsub": "smart_contracts.salvo.subroutines.get_grid_cell_value",
      "op": "callsub get_grid_cell_value",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "reinterpret_biguint%0#0",
        "row#0",
        "tmp%0#9"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0"
      ]
    },
    "1700": {
      "op": "bytec_0 // 0x00",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0",
        "0x00"
      ]
    },
    "1701": {
      "op": "b==",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%1#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1"
      ]
    },
    "1702": {
      "op": "frame_dig 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1",
        "count#12"
      ]
    },
    "1704": {
      "op": "frame_bury 3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1"
      ]
    },
    "1706": {
      "op": "frame_dig 4",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1",
        "neighbors#12"
      ]
    },
    "1708": {
      "op": "frame_bury 5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1"
      ]
    },
    "1710": {
      "op": "bz mimc_tester_after_if_else@24",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1713": {
      "op": "frame_dig 7",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#0"
      ]
    },
    "1715": {
      "op": "frame_dig 0",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#0",
        "col#0"
      ]
    },
    "1717": {
      "op": "concat",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%11#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "1718": {
      "op": "frame_dig 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%11#0",
        "count#0"
      ]
    },
    "1720": {
      "op": "btoi",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%11#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%18#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%11#0",
        "tmp%18#0"
      ]
    },
    "1721": {
      "op": "dup",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%11#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%18#0",
        "tmp%18#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%11#0",
        "tmp%18#0",
        "tmp%18#0 (copy)"
      ]
    },
    "1722": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%11#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%18#0",
        "tmp%18#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%11#0",
        "tmp%18#0",
        "tmp%18#0 (copy)",
        "4"
      ]
    },
    "1724": {
      "op": "<",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%11#0",
        "index_is_in_bounds%2#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%18#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%11#0",
        "tmp%18#0",
        "index_is_in_bounds%2#0"
      ]
    },
    "1725": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%11#0",
        "tmp%18#0"
      ]
    },
    "1726": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%11#0",
        "tmp%18#0",
        "tmp%18#0 (copy)"
      ]
    },
    "1727": {
      "op": "intc_2 // 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%11#0",
        "tmp%18#0",
        "tmp%18#0 (copy)",
        "2"
      ]
    },
    "1728": {
      "op": "*",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%11#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%18#0",
        "write_offset%2#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%11#0",
        "tmp%18#0",
        "write_offset%2#0"
      ]
    },
    "1729": {
      "op": "frame_dig 4",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%11#0",
        "tmp%18#0",
        "write_offset%2#0",
        "neighbors#0"
      ]
    },
    "1731": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%11#0",
        "tmp%18#0",
        "neighbors#0",
        "write_offset%2#0"
      ]
    },
    "1732": {
      "op": "uncover 3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%18#0",
        "neighbors#0",
        "write_offset%2#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "1734": {
      "op": "replace3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%18#0",
        "neighbors#0"
      ]
    },
    "1735": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%18#0"
      ]
    },
    "1736": {
      "op": "intc_0 // 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%18#0",
        "1"
      ]
    },
    "1737": {
      "op": "+",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "to_encode%8#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "to_encode%8#0"
      ]
    },
    "1738": {
      "op": "itob",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%8#0"
      ]
    },
    "1739": {
      "op": "dup",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "val_as_bytes%8#0",
        "val_as_bytes%8#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%8#0",
        "val_as_bytes%8#0 (copy)"
      ]
    },
    "1740": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%8#0",
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%8#0",
        "bitlen%8#0"
      ]
    },
    "1741": {
      "op": "intc_3 // 8",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%8#0",
        "bitlen%8#0",
        "8"
      ]
    },
    "1742": {
      "op": "<=",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "no_overflow%8#0",
        "row#0",
        "tmp%0#9",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%8#0",
        "no_overflow%8#0"
      ]
    },
    "1743": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%8#0"
      ]
    },
    "1744": {
      "op": "extract 7 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#12"
      ]
    },
    "1747": {
      "op": "frame_bury 3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#12"
      ]
    },
    "1749": {
      "op": "frame_bury 5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1751": {
      "block": "mimc_tester_after_if_else@24",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0"
      ]
    },
    "1753": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0",
        "count#0"
      ]
    },
    "1754": {
      "op": "frame_bury 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0"
      ]
    },
    "1756": {
      "op": "frame_dig 5",
      "defined_out": [
        "count#0",
        "neighbors#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0",
        "neighbors#0"
      ]
    },
    "1758": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0",
        "neighbors#0",
        "neighbors#0 (copy)"
      ]
    },
    "1759": {
      "op": "cover 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "neighbors#0"
      ]
    },
    "1761": {
      "op": "frame_bury 4",
      "defined_out": [
        "count#0",
        "neighbors#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0"
      ]
    },
    "1763": {
      "op": "frame_dig -5",
      "defined_out": [
        "count#0",
        "neighbors#0",
        "position#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "position#0 (copy)"
      ]
    },
    "1765": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "count#0",
        "neighbors#0",
        "position#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "position#0 (copy)",
        "1"
      ]
    },
    "1766": {
      "op": "getbyte",
      "defined_out": [
        "count#0",
        "neighbors#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%20#0"
      ]
    },
    "1767": {
      "op": "intc_0 // 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%20#0",
        "1"
      ]
    },
    "1768": {
      "op": "+",
      "defined_out": [
        "count#0",
        "neighbors#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%21#0"
      ]
    },
    "1769": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%21#0",
        "tmp%21#0"
      ]
    },
    "1770": {
      "op": "frame_bury 14",
      "defined_out": [
        "count#0",
        "neighbors#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%21#0"
      ]
    },
    "1772": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "11",
        "count#0",
        "neighbors#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%21#0",
        "11"
      ]
    },
    "1774": {
      "op": "<",
      "defined_out": [
        "count#0",
        "neighbors#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#0",
        "tmp%22#0"
      ]
    },
    "1775": {
      "op": "swap",
      "defined_out": [
        "count#0",
        "count#12",
        "neighbors#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%22#0",
        "count#12"
      ]
    },
    "1776": {
      "op": "frame_bury 3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%22#0"
      ]
    },
    "1778": {
      "op": "swap",
      "defined_out": [
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%22#0",
        "neighbors#12"
      ]
    },
    "1779": {
      "op": "frame_bury 5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%22#0"
      ]
    },
    "1781": {
      "op": "bz mimc_tester_after_if_else@27",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1784": {
      "op": "frame_dig 14",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%21#0"
      ]
    },
    "1786": {
      "op": "itob",
      "defined_out": [
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%21#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%9#0"
      ]
    },
    "1787": {
      "op": "dup",
      "defined_out": [
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%21#0",
        "val_as_bytes%9#0",
        "val_as_bytes%9#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%9#0",
        "val_as_bytes%9#0 (copy)"
      ]
    },
    "1788": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%9#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%21#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%9#0",
        "bitlen%9#0"
      ]
    },
    "1789": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "bitlen%9#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%21#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%9#0",
        "bitlen%9#0",
        "8"
      ]
    },
    "1790": {
      "op": "<=",
      "defined_out": [
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "no_overflow%9#0",
        "tmp%21#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%9#0",
        "no_overflow%9#0"
      ]
    },
    "1791": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "val_as_bytes%9#0"
      ]
    },
    "1792": {
      "op": "extract 7 1",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%21#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "col#0"
      ]
    },
    "1795": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "col#0",
        "col#0"
      ]
    },
    "1796": {
      "op": "frame_bury 0",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "tmp%21#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "col#0"
      ]
    },
    "1798": {
      "op": "frame_dig 7",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "col#0",
        "row#0"
      ]
    },
    "1800": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#0",
        "col#0"
      ]
    },
    "1801": {
      "callsub": "smart_contracts.salvo.subroutines.convert_grid_coords_to_index",
      "op": "callsub convert_grid_coords_to_index",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%21#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#9"
      ]
    },
    "1804": {
      "op": "intc_0 // 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#9",
        "1"
      ]
    },
    "1805": {
      "op": "bytec_2 // \"g_\"",
      "defined_out": [
        "\"g_\"",
        "1",
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%21#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#9",
        "1",
        "\"g_\""
      ]
    },
    "1806": {
      "op": "uncover 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "1",
        "\"g_\"",
        "tmp%0#9"
      ]
    },
    "1808": {
      "callsub": "smart_contracts.salvo.subroutines.get_grid_cell_value",
      "op": "callsub get_grid_cell_value",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "reinterpret_biguint%0#0",
        "row#0",
        "tmp%0#9",
        "tmp%21#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0"
      ]
    },
    "1811": {
      "op": "bytec_0 // 0x00",
      "defined_out": [
        "0x00",
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "reinterpret_biguint%0#0",
        "row#0",
        "tmp%0#9",
        "tmp%21#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "reinterpret_biguint%0#0",
        "0x00"
      ]
    },
    "1812": {
      "op": "b==",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%1#1",
        "tmp%21#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1"
      ]
    },
    "1813": {
      "op": "frame_dig 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1",
        "count#12"
      ]
    },
    "1815": {
      "op": "frame_bury 3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1"
      ]
    },
    "1817": {
      "op": "frame_dig 4",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1",
        "neighbors#12"
      ]
    },
    "1819": {
      "op": "frame_bury 5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#1"
      ]
    },
    "1821": {
      "op": "bz mimc_tester_after_if_else@27",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1824": {
      "op": "frame_dig 7",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#0"
      ]
    },
    "1826": {
      "op": "frame_dig 0",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "row#0",
        "col#0"
      ]
    },
    "1828": {
      "op": "concat",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%14#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%21#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "1829": {
      "op": "frame_dig 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%14#0",
        "count#0"
      ]
    },
    "1831": {
      "op": "btoi",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%14#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%21#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%14#0",
        "tmp%26#0"
      ]
    },
    "1832": {
      "op": "dup",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%14#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%21#0",
        "tmp%26#0",
        "tmp%26#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%14#0",
        "tmp%26#0",
        "tmp%26#0 (copy)"
      ]
    },
    "1833": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%14#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%21#0",
        "tmp%26#0",
        "tmp%26#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%14#0",
        "tmp%26#0",
        "tmp%26#0 (copy)",
        "4"
      ]
    },
    "1835": {
      "op": "<",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%14#0",
        "index_is_in_bounds%3#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%21#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%14#0",
        "tmp%26#0",
        "index_is_in_bounds%3#0"
      ]
    },
    "1836": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%14#0",
        "tmp%26#0"
      ]
    },
    "1837": {
      "op": "dup",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%14#0",
        "tmp%26#0",
        "tmp%26#0 (copy)"
      ]
    },
    "1838": {
      "op": "intc_2 // 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%14#0",
        "tmp%26#0",
        "tmp%26#0 (copy)",
        "2"
      ]
    },
    "1839": {
      "op": "*",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "encoded_tuple_buffer%14#0",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%21#0",
        "tmp%26#0",
        "write_offset%3#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%14#0",
        "tmp%26#0",
        "write_offset%3#0"
      ]
    },
    "1840": {
      "op": "frame_dig 4",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%14#0",
        "tmp%26#0",
        "write_offset%3#0",
        "neighbors#0"
      ]
    },
    "1842": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "encoded_tuple_buffer%14#0",
        "tmp%26#0",
        "neighbors#0",
        "write_offset%3#0"
      ]
    },
    "1843": {
      "op": "uncover 3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%26#0",
        "neighbors#0",
        "write_offset%3#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "1845": {
      "op": "replace3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%26#0",
        "neighbors#0"
      ]
    },
    "1846": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%26#0"
      ]
    },
    "1847": {
      "op": "intc_0 // 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "tmp%26#0",
        "1"
      ]
    },
    "1848": {
      "op": "+",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%21#0",
        "to_encode%11#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "to_encode%11#0"
      ]
    },
    "1849": {
      "op": "itob",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%21#0",
        "val_as_bytes%11#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%11#0"
      ]
    },
    "1850": {
      "op": "dup",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%21#0",
        "val_as_bytes%11#0",
        "val_as_bytes%11#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%11#0",
        "val_as_bytes%11#0 (copy)"
      ]
    },
    "1851": {
      "op": "bitlen",
      "defined_out": [
        "bitlen%11#0",
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "row#0",
        "tmp%0#9",
        "tmp%21#0",
        "val_as_bytes%11#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%11#0",
        "bitlen%11#0"
      ]
    },
    "1852": {
      "op": "intc_3 // 8",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%11#0",
        "bitlen%11#0",
        "8"
      ]
    },
    "1853": {
      "op": "<=",
      "defined_out": [
        "col#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "no_overflow%11#0",
        "row#0",
        "tmp%0#9",
        "tmp%21#0",
        "val_as_bytes%11#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%11#0",
        "no_overflow%11#0"
      ]
    },
    "1854": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "val_as_bytes%11#0"
      ]
    },
    "1855": {
      "op": "extract 7 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "count#12"
      ]
    },
    "1858": {
      "op": "frame_bury 3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#12"
      ]
    },
    "1860": {
      "op": "frame_bury 5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1862": {
      "block": "mimc_tester_after_if_else@27",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0"
      ]
    },
    "1864": {
      "op": "frame_dig 5",
      "defined_out": [
        "count#0",
        "neighbors#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0",
        "neighbors#0"
      ]
    },
    "1866": {
      "op": "frame_bury 4",
      "defined_out": [
        "count#0",
        "neighbors#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "count#0"
      ]
    },
    "1868": {
      "op": "btoi",
      "defined_out": [
        "count#0",
        "neighbors#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#1"
      ]
    },
    "1869": {
      "op": "frame_bury 12",
      "defined_out": [
        "count#0",
        "neighbors#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1871": {
      "op": "intc_1 // 0",
      "defined_out": [
        "count#0",
        "i#0",
        "neighbors#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "i#0"
      ]
    },
    "1872": {
      "op": "frame_bury 10",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1874": {
      "block": "mimc_tester_for_header@28",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "i#0"
      ]
    },
    "1876": {
      "op": "frame_dig 12",
      "defined_out": [
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "i#0",
        "tmp%0#1"
      ]
    },
    "1878": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "continue_looping%0#0"
      ]
    },
    "1879": {
      "op": "bz mimc_tester_after_for@32",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1882": {
      "op": "frame_dig 10",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "i#0"
      ]
    },
    "1884": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "i#0",
        "2"
      ]
    },
    "1885": {
      "op": "*",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_offset%0#0"
      ]
    },
    "1886": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "item_offset%0#0",
        "neighbors#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_offset%0#0",
        "neighbors#0"
      ]
    },
    "1888": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "item_offset%0#0"
      ]
    },
    "1889": {
      "op": "intc_2 // 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "neighbors#0",
        "item_offset%0#0",
        "2"
      ]
    },
    "1890": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "neighbors#0",
        "tmp%0#1",
        "tmp%1#3"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#3"
      ]
    },
    "1891": {
      "op": "frame_dig 1",
      "defined_out": [
        "coords#0",
        "i#0",
        "neighbors#0",
        "tmp%0#1",
        "tmp%1#3"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%1#3",
        "coords#0"
      ]
    },
    "1893": {
      "op": "==",
      "defined_out": [
        "coords#0",
        "i#0",
        "neighbors#0",
        "tmp%0#1",
        "tmp%2#3"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%2#3"
      ]
    },
    "1894": {
      "op": "bz mimc_tester_after_if_else@31",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1897": {
      "op": "intc_0 // 1",
      "defined_out": [
        "coords#0",
        "i#0",
        "is_single_move_valid%0#0",
        "neighbors#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "is_single_move_valid%0#0"
      ]
    },
    "1898": {
      "block": "mimc_tester_after_inlined_smart_contracts.salvo.subroutines.is_single_move_valid@33",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "is_single_move_valid%0#0"
      ],
      "op": "bnz mimc_tester_after_if_else@35",
      "defined_out": [],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1901": {
      "op": "intc_1 // 0",
      "defined_out": [
        "is_move_sequence_valid%0#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "is_move_sequence_valid%0#0"
      ]
    },
    "1902": {
      "block": "mimc_tester_after_inlined_smart_contracts.salvo.subroutines.is_move_sequence_valid@37",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "is_move_sequence_valid%0#0"
      ],
      "error": "Invalid move sequence. Ensure coordinate entries within the movement array are valid path cells.",
      "op": "assert // Invalid move sequence. Ensure coordinate entries within the movement array are valid path cells.",
      "defined_out": [],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1903": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "24"
      ]
    },
    "1905": {
      "op": "bzero",
      "defined_out": [
        "tmp%0#9"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#9"
      ]
    },
    "1906": {
      "op": "frame_bury 9",
      "defined_out": [
        "tmp%0#9"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1908": {
      "op": "pushbytes 0x00000000000000000000000000000000000000000000000000000053616c766f",
      "defined_out": [
        "preimage#1",
        "tmp%0#9"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "preimage#1"
      ]
    },
    "1942": {
      "op": "frame_bury 6",
      "defined_out": [
        "preimage#1",
        "tmp%0#9"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1944": {
      "op": "intc_1 // 0",
      "defined_out": [
        "item_index_internal%0#0",
        "preimage#1",
        "tmp%0#9"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0"
      ]
    },
    "1945": {
      "op": "frame_bury 11",
      "defined_out": [
        "item_index_internal%0#0",
        "preimage#1",
        "tmp%0#9"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1947": {
      "block": "mimc_tester_for_header@1",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0"
      ]
    },
    "1949": {
      "op": "frame_dig 13",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "1951": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "continue_looping%0#0"
      ]
    },
    "1952": {
      "op": "bz mimc_tester_after_for@4",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1955": {
      "op": "frame_dig -4",
      "defined_out": [
        "item_index_internal%0#0",
        "movement#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "movement#0 (copy)"
      ]
    },
    "1957": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "array_head_and_tail%0#0"
      ]
    },
    "1960": {
      "op": "frame_dig 11",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1962": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1963": {
      "op": "cover 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1965": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_index_internal%0#0 (copy)",
        "2"
      ]
    },
    "1966": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "item_offset%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1967": {
      "op": "intc_2 // 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "2"
      ]
    },
    "1968": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item_index_internal%0#0",
        "new_coords#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_coords#0"
      ]
    },
    "1969": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "new_coords#0",
        "new_coords#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_coords#0",
        "new_coords#0 (copy)"
      ]
    },
    "1970": {
      "error": "Index access is out of bounds",
      "op": "extract 0 1 // on error: Index access is out of bounds",
      "defined_out": [
        "item_index_internal%0#0",
        "new_coords#0",
        "new_row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_coords#0",
        "new_row#0"
      ]
    },
    "1973": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_row#0",
        "new_coords#0"
      ]
    },
    "1974": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "item_index_internal%0#0",
        "new_col#0",
        "new_row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_row#0",
        "new_col#0"
      ]
    },
    "1977": {
      "op": "pushint 31 // 31",
      "defined_out": [
        "31",
        "item_index_internal%0#0",
        "new_col#0",
        "new_row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_row#0",
        "new_col#0",
        "31"
      ]
    },
    "1979": {
      "op": "bzero",
      "defined_out": [
        "item_index_internal%0#0",
        "new_col#0",
        "new_row#0",
        "tmp%0#4",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_row#0",
        "new_col#0",
        "tmp%0#4"
      ]
    },
    "1980": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "new_col#0",
        "new_row#0",
        "tmp%0#4",
        "tmp%0#4 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_row#0",
        "new_col#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ]
    },
    "1981": {
      "op": "uncover 3",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_col#0",
        "tmp%0#4",
        "tmp%0#4 (copy)",
        "new_row#0"
      ]
    },
    "1983": {
      "op": "concat",
      "defined_out": [
        "item_index_internal%0#0",
        "new_col#0",
        "tmp%0#4",
        "tmp%1#0",
        "tmp%1#3"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_col#0",
        "tmp%0#4",
        "tmp%1#3"
      ]
    },
    "1984": {
      "op": "frame_dig 6",
      "defined_out": [
        "item_index_internal%0#0",
        "new_col#0",
        "preimage#1",
        "tmp%0#4",
        "tmp%1#0",
        "tmp%1#3"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_col#0",
        "tmp%0#4",
        "tmp%1#3",
        "preimage#1"
      ]
    },
    "1986": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_col#0",
        "tmp%0#4",
        "preimage#1",
        "tmp%1#3"
      ]
    },
    "1987": {
      "op": "concat",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_col#0",
        "tmp%0#4",
        "preimage#1"
      ]
    },
    "1988": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "new_col#0",
        "preimage#1",
        "tmp%0#4"
      ]
    },
    "1989": {
      "op": "uncover 2",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "preimage#1",
        "tmp%0#4",
        "new_col#0"
      ]
    },
    "1991": {
      "op": "concat",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "preimage#1",
        "tmp%1#3"
      ]
    },
    "1992": {
      "op": "concat",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "preimage#1"
      ]
    },
    "1993": {
      "op": "frame_bury 6",
      "defined_out": [
        "item_index_internal%0#0",
        "preimage#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0"
      ]
    },
    "1995": {
      "op": "intc_0 // 1",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1996": {
      "op": "+",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0"
      ]
    },
    "1997": {
      "op": "frame_bury 11",
      "defined_out": [
        "item_index_internal%0#0",
        "preimage#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "1999": {
      "op": "b mimc_tester_for_header@1"
    },
    "2002": {
      "block": "mimc_tester_after_for@4",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "pushint 31 // 31",
      "defined_out": [
        "31"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "31"
      ]
    },
    "2004": {
      "op": "bzero",
      "defined_out": [
        "tmp%0#4"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#4"
      ]
    },
    "2005": {
      "op": "dup",
      "defined_out": [
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ]
    },
    "2006": {
      "op": "frame_dig -3",
      "defined_out": [
        "action#0 (copy)",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#4",
        "tmp%0#4 (copy)",
        "action#0 (copy)"
      ]
    },
    "2008": {
      "op": "concat",
      "defined_out": [
        "tmp%0#4",
        "tmp%1#3"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#4",
        "tmp%1#3"
      ]
    },
    "2009": {
      "op": "frame_dig 6",
      "defined_out": [
        "preimage#1",
        "tmp%0#4",
        "tmp%1#3"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#4",
        "tmp%1#3",
        "preimage#1"
      ]
    },
    "2011": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#4",
        "preimage#1",
        "tmp%1#3"
      ]
    },
    "2012": {
      "op": "concat",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "tmp%0#4",
        "preimage#1"
      ]
    },
    "2013": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "preimage#1",
        "tmp%0#4"
      ]
    },
    "2014": {
      "op": "frame_dig -2",
      "defined_out": [
        "direction#0 (copy)",
        "preimage#1",
        "tmp%0#4"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "preimage#1",
        "tmp%0#4",
        "direction#0 (copy)"
      ]
    },
    "2016": {
      "op": "concat",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "preimage#1",
        "tmp%1#3"
      ]
    },
    "2017": {
      "op": "concat",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "preimage#1"
      ]
    },
    "2018": {
      "op": "frame_dig -1",
      "defined_out": [
        "preimage#1",
        "salt#0 (copy)"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "preimage#1",
        "salt#0 (copy)"
      ]
    },
    "2020": {
      "op": "itob",
      "defined_out": [
        "preimage#1",
        "u#2"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "preimage#1",
        "u#2"
      ]
    },
    "2021": {
      "op": "frame_dig 9",
      "defined_out": [
        "preimage#1",
        "tmp%0#9",
        "u#2"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "preimage#1",
        "u#2",
        "tmp%0#9"
      ]
    },
    "2023": {
      "op": "swap",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "preimage#1",
        "tmp%0#9",
        "u#2"
      ]
    },
    "2024": {
      "op": "concat",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "preimage#1",
        "tmp%1#3"
      ]
    },
    "2025": {
      "op": "concat",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "preimage#1"
      ]
    },
    "2026": {
      "op": "mimc BLS12_381Mp111",
      "defined_out": [
        "output#0",
        "preimage#1",
        "tmp%0#9"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "output#0"
      ]
    },
    "2028": {
      "op": "frame_bury 0"
    },
    "2030": {
      "retsub": true,
      "op": "retsub"
    },
    "2031": {
      "block": "mimc_tester_after_if_else@35",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "frame_dig 11",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0"
      ]
    },
    "2033": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "2034": {
      "op": "+",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "item_index_internal%0#0"
      ]
    },
    "2035": {
      "op": "frame_bury 11",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "2037": {
      "op": "frame_dig 1",
      "defined_out": [
        "coords#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "coords#0"
      ]
    },
    "2039": {
      "op": "frame_bury -5",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "2041": {
      "op": "b mimc_tester_for_header@14"
    },
    "2044": {
      "block": "mimc_tester_after_if_else@31",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "i#0"
      ]
    },
    "2046": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "i#0",
        "1"
      ]
    },
    "2047": {
      "op": "+",
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "i#0"
      ]
    },
    "2048": {
      "op": "frame_bury 10",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ]
    },
    "2050": {
      "op": "b mimc_tester_for_header@28"
    },
    "2053": {
      "block": "mimc_tester_after_for@32",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "is_single_move_valid%0#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "is_single_move_valid%0#0"
      ]
    },
    "2054": {
      "op": "b mimc_tester_after_inlined_smart_contracts.salvo.subroutines.is_single_move_valid@33"
    },
    "2057": {
      "block": "mimc_tester_after_for@36",
      "stack_in": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "is_move_sequence_valid%0#0"
      ],
      "stack_out": [
        "col#0",
        "coords#0",
        "count#0",
        "count#12",
        "neighbors#0",
        "neighbors#12",
        "preimage#1",
        "row#0",
        "row#5",
        "tmp%0#9",
        "i#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%7#1",
        "is_move_sequence_valid%0#0"
      ]
    },
    "2058": {
      "op": "b mimc_tester_after_inlined_smart_contracts.salvo.subroutines.is_move_sequence_valid@37"
    },
    "2061": {
      "subroutine": "smart_contracts.salvo.contract.Salvo.update",
      "params": {},
      "block": "update",
      "stack_in": [],
      "op": "intc 6 // TMPL_UPDATABLE",
      "defined_out": [
        "TMPL_UPDATABLE"
      ],
      "stack_out": [
        "TMPL_UPDATABLE"
      ]
    },
    "2063": {
      "error": "Template variable 'UPDATABLE' needs to be 'True' at deploy-time.",
      "op": "assert // Template variable 'UPDATABLE' needs to be 'True' at deploy-time.",
      "stack_out": []
    },
    "2064": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2066": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2068": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2069": {
      "error": "Only app creator can act as the sender address.",
      "op": "assert // Only app creator can act as the sender address.",
      "stack_out": []
    },
    "2070": {
      "retsub": true,
      "op": "retsub"
    }
  }
}